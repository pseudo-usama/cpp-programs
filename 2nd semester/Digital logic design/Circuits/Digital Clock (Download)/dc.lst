;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 1/7/2015 6:10:40 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2AD1      	GOTO       721
0x0001	0x0000      	NOP
0x0002	0x0000      	NOP
0x0003	0x0000      	NOP
0x0004	0x2800      	GOTO       0
_Div_16x16_S_L:
;__Lib_Math.c,420 :: 		
;__Lib_Math.c,426 :: 		
0x0005	0x0D71      	RLF        R1, 0
;__Lib_Math.c,427 :: 		
0x0006	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,428 :: 		
0x0007	0x0DF9      	RLF        R9, 1
;__Lib_Math.c,429 :: 		
0x0008	0x0874      	MOVF       R4, 0
;__Lib_Math.c,430 :: 		
0x0009	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,431 :: 		
0x000A	0x0875      	MOVF       R5, 0
;__Lib_Math.c,432 :: 		
0x000B	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,433 :: 		
0x000C	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,434 :: 		
0x000D	0x02F9      	SUBWF      R9, 1
;__Lib_Math.c,435 :: 		
0x000E	0x0DF0      	RLF        R0, 1
;__Lib_Math.c,436 :: 		
0x000F	0x0DF1      	RLF        R1, 1
;__Lib_Math.c,438 :: 		
0x0010	0x300F      	MOVLW      15
;__Lib_Math.c,439 :: 		
0x0011	0x00FC      	MOVWF      R12
;__Lib_Math.c,441 :: 		
0x0012	0x0D71      	RLF        R1, 0
;__Lib_Math.c,442 :: 		
0x0013	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,443 :: 		
0x0014	0x0DF9      	RLF        R9, 1
;__Lib_Math.c,444 :: 		
0x0015	0x0874      	MOVF       R4, 0
;__Lib_Math.c,446 :: 		
0x0016	0x1C70      	BTFSS      R0, 0
;__Lib_Math.c,447 :: 		
0x0017	0x281E      	GOTO       $+7
;__Lib_Math.c,448 :: 		
0x0018	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,449 :: 		
0x0019	0x0875      	MOVF       R5, 0
;__Lib_Math.c,450 :: 		
0x001A	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,451 :: 		
0x001B	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,452 :: 		
0x001C	0x02F9      	SUBWF      R9, 1
;__Lib_Math.c,453 :: 		
0x001D	0x2823      	GOTO       $+6
;__Lib_Math.c,455 :: 		
0x001E	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,456 :: 		
0x001F	0x0875      	MOVF       R5, 0
;__Lib_Math.c,457 :: 		
0x0020	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,458 :: 		
0x0021	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,459 :: 		
0x0022	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,461 :: 		
0x0023	0x0DF0      	RLF        R0, 1
;__Lib_Math.c,462 :: 		
0x0024	0x0DF1      	RLF        R1, 1
;__Lib_Math.c,464 :: 		
0x0025	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,465 :: 		
0x0026	0x2812      	GOTO       $-20
;__Lib_Math.c,467 :: 		
0x0027	0x1870      	BTFSC      R0, 0
;__Lib_Math.c,468 :: 		
0x0028	0x282F      	GOTO       $+7
;__Lib_Math.c,469 :: 		
0x0029	0x0874      	MOVF       R4, 0
;__Lib_Math.c,470 :: 		
0x002A	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,471 :: 		
0x002B	0x0875      	MOVF       R5, 0
;__Lib_Math.c,472 :: 		
0x002C	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,473 :: 		
0x002D	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,474 :: 		
0x002E	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,475 :: 		
0x002F	0x0000      	NOP
;__Lib_Math.c,477 :: 		
0x0030	0x0008      	RETURN
; end of _Div_16x16_S_L
_I2C1_Is_Idle:
;__Lib_I2C_c34.c,11 :: 		
;__Lib_I2C_c34.c,12 :: 		
0x0031	0x1683      	BSF        STATUS, 5
0x0032	0x1303      	BCF        STATUS, 6
0x0033	0x1914      	BTFSC      SSPSTAT, 2
0x0034	0x283F      	GOTO       L_I2C1_Is_Idle0
;__Lib_I2C_c34.c,13 :: 		
0x0035	0x301F      	MOVLW      31
0x0036	0x0511      	ANDWF      SSPCON2, 0
0x0037	0x00F1      	MOVWF      R1
0x0038	0x0871      	MOVF       R1, 0
0x0039	0x3A00      	XORLW      0
0x003A	0x1D03      	BTFSS      STATUS, 2
0x003B	0x283F      	GOTO       L_I2C1_Is_Idle1
;__Lib_I2C_c34.c,14 :: 		
0x003C	0x3001      	MOVLW      1
0x003D	0x00F0      	MOVWF      R0
0x003E	0x0008      	RETURN
L_I2C1_Is_Idle1:
L_I2C1_Is_Idle0:
;__Lib_I2C_c34.c,15 :: 		
0x003F	0x01F0      	CLRF       R0
;__Lib_I2C_c34.c,16 :: 		
0x0040	0x0008      	RETURN
; end of _I2C1_Is_Idle
_I2C1_Start:
;__Lib_I2C_c34.c,18 :: 		
;__Lib_I2C_c34.c,21 :: 		
0x0041	0x1283      	BCF        STATUS, 5
0x0042	0x1303      	BCF        STATUS, 6
0x0043	0x01C7      	CLRF       I2C1_Start_j_L0
0x0044	0x01C8      	CLRF       I2C1_Start_j_L0+1
L_I2C1_Start2:
0x0045	0x0848      	MOVF       I2C1_Start_j_L0+1, 0
0x0046	0x3C12      	SUBLW      18
0x0047	0x1D03      	BTFSS      STATUS, 2
0x0048	0x284B      	GOTO       L__I2C1_Start24
0x0049	0x0847      	MOVF       I2C1_Start_j_L0, 0
0x004A	0x3C8E      	SUBLW      142
L__I2C1_Start24:
0x004B	0x1C03      	BTFSS      STATUS, 0
0x004C	0x2857      	GOTO       L_I2C1_Start3
;__Lib_I2C_c34.c,22 :: 		
0x004D	0x2031      	CALL       _I2C1_Is_Idle
0x004E	0x0870      	MOVF       R0, 0
0x004F	0x1903      	BTFSC      STATUS, 2
0x0050	0x2852      	GOTO       L_I2C1_Start5
;__Lib_I2C_c34.c,23 :: 		
0x0051	0x2857      	GOTO       L_I2C1_Start3
L_I2C1_Start5:
;__Lib_I2C_c34.c,21 :: 		
0x0052	0x1283      	BCF        STATUS, 5
0x0053	0x0AC7      	INCF       I2C1_Start_j_L0, 1
0x0054	0x1903      	BTFSC      STATUS, 2
0x0055	0x0AC8      	INCF       I2C1_Start_j_L0+1, 1
;__Lib_I2C_c34.c,24 :: 		
0x0056	0x2845      	GOTO       L_I2C1_Start2
L_I2C1_Start3:
0x0057	0x1283      	BCF        STATUS, 5
;__Lib_I2C_c34.c,26 :: 		
0x0058	0x3012      	MOVLW      18
0x0059	0x0248      	SUBWF      I2C1_Start_j_L0+1, 0
0x005A	0x1D03      	BTFSS      STATUS, 2
0x005B	0x285E      	GOTO       L__I2C1_Start25
0x005C	0x308F      	MOVLW      143
0x005D	0x0247      	SUBWF      I2C1_Start_j_L0, 0
L__I2C1_Start25:
0x005E	0x1C03      	BTFSS      STATUS, 0
0x005F	0x2863      	GOTO       L_I2C1_Start6
;__Lib_I2C_c34.c,27 :: 		
0x0060	0x307B      	MOVLW      123
0x0061	0x00F0      	MOVWF      R0
0x0062	0x0008      	RETURN
L_I2C1_Start6:
0x0063	0x1683      	BSF        STATUS, 5
;__Lib_I2C_c34.c,29 :: 		
0x0064	0x1411      	BSF        SSPCON2, 0
;__Lib_I2C_c34.c,30 :: 		
L_I2C1_Start8:
0x0065	0x1C11      	BTFSS      SSPCON2, 0
0x0066	0x2868      	GOTO       L_I2C1_Start9
;__Lib_I2C_c34.c,31 :: 		
0x0067	0x2865      	GOTO       L_I2C1_Start8
L_I2C1_Start9:
;__Lib_I2C_c34.c,32 :: 		
0x0068	0x01F0      	CLRF       R0
;__Lib_I2C_c34.c,34 :: 		
0x0069	0x0008      	RETURN
; end of _I2C1_Start
_I2C1_Wr:
;__Lib_I2C_c34.c,64 :: 		
;__Lib_I2C_c34.c,66 :: 		
0x006A	0x1283      	BCF        STATUS, 5
0x006B	0x1303      	BCF        STATUS, 6
0x006C	0x118C      	BCF        PIR1, 3
;__Lib_I2C_c34.c,67 :: 		
0x006D	0x0847      	MOVF       FARG_I2C1_Wr_data_, 0
0x006E	0x0093      	MOVWF      SSPBUF
;__Lib_I2C_c34.c,69 :: 		
L_I2C1_Wr18:
0x006F	0x1683      	BSF        STATUS, 5
0x0070	0x1D14      	BTFSS      SSPSTAT, 2
0x0071	0x2873      	GOTO       L_I2C1_Wr19
0x0072	0x286F      	GOTO       L_I2C1_Wr18
L_I2C1_Wr19:
;__Lib_I2C_c34.c,71 :: 		
L_I2C1_Wr20:
0x0073	0x1283      	BCF        STATUS, 5
0x0074	0x198C      	BTFSC      PIR1, 3
0x0075	0x2877      	GOTO       L_I2C1_Wr21
0x0076	0x2873      	GOTO       L_I2C1_Wr20
L_I2C1_Wr21:
;__Lib_I2C_c34.c,73 :: 		
0x0077	0x1683      	BSF        STATUS, 5
0x0078	0x1B11      	BTFSC      SSPCON2, 6
0x0079	0x287C      	GOTO       L_I2C1_Wr22
;__Lib_I2C_c34.c,74 :: 		
0x007A	0x01F0      	CLRF       R0
0x007B	0x0008      	RETURN
;__Lib_I2C_c34.c,75 :: 		
L_I2C1_Wr22:
;__Lib_I2C_c34.c,77 :: 		
0x007C	0x1511      	BSF        SSPCON2, 2
;__Lib_I2C_c34.c,78 :: 		
0x007D	0x3002      	MOVLW      2
0x007E	0x00F0      	MOVWF      R0
;__Lib_I2C_c34.c,80 :: 		
0x007F	0x0008      	RETURN
; end of _I2C1_Wr
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x0080	0x1283      	BCF        STATUS, 5
0x0081	0x1303      	BCF        STATUS, 6
0x0082	0x0842      	MOVF       ___DoICPAddr+1, 0
0x0083	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x0084	0x0841      	MOVF       ___DoICPAddr, 0
0x0085	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
0x0086	0x0008      	RETURN
; end of _____DoICP
_Div_16x16_S:
;__Lib_Math.c,479 :: 		
;__Lib_Math.c,486 :: 		
0x0087	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,487 :: 		
0x0088	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,488 :: 		
0x0089	0x01FD      	CLRF       R13
;__Lib_Math.c,489 :: 		
0x008A	0x01F9      	CLRF       R9
;__Lib_Math.c,490 :: 		
0x008B	0x01F8      	CLRF       R8
;__Lib_Math.c,491 :: 		
0x008C	0x0871      	MOVF       R1, 0
;__Lib_Math.c,492 :: 		
0x008D	0x0470      	IORWF      R0, 0
;__Lib_Math.c,493 :: 		
0x008E	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,494 :: 		
0x008F	0x3400      	RETLW      0
;__Lib_Math.c,496 :: 		
0x0090	0x0871      	MOVF       R1, 0
;__Lib_Math.c,497 :: 		
0x0091	0x0675      	XORWF      R5, 0
;__Lib_Math.c,498 :: 		
0x0092	0x00FA      	MOVWF      R10
;__Lib_Math.c,499 :: 		
0x0093	0x1BFA      	BTFSC      R10, 7
;__Lib_Math.c,500 :: 		
0x0094	0x09FD      	COMF       R13, 1
;__Lib_Math.c,502 :: 		
0x0095	0x01FB      	CLRF       R11
;__Lib_Math.c,504 :: 		
0x0096	0x1FF5      	BTFSS      R5, 7
;__Lib_Math.c,505 :: 		
0x0097	0x289D      	GOTO       $+6
;__Lib_Math.c,507 :: 		
0x0098	0x09F4      	COMF       R4, 1
;__Lib_Math.c,508 :: 		
0x0099	0x09F5      	COMF       R5, 1
;__Lib_Math.c,509 :: 		
0x009A	0x0AF4      	INCF       R4, 1
;__Lib_Math.c,510 :: 		
0x009B	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,511 :: 		
0x009C	0x0AF5      	INCF       R5, 1
;__Lib_Math.c,513 :: 		
0x009D	0x1FF1      	BTFSS      R1, 7
;__Lib_Math.c,514 :: 		
0x009E	0x28A4      	GOTO       $+6
;__Lib_Math.c,516 :: 		
0x009F	0x09F0      	COMF       R0, 1
;__Lib_Math.c,517 :: 		
0x00A0	0x09F1      	COMF       R1, 1
;__Lib_Math.c,518 :: 		
0x00A1	0x0AF0      	INCF       R0, 1
;__Lib_Math.c,519 :: 		
0x00A2	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,520 :: 		
0x00A3	0x0AF1      	INCF       R1, 1
;__Lib_Math.c,522 :: 		
0x00A4	0x0871      	MOVF       R1, 0
;__Lib_Math.c,523 :: 		
0x00A5	0x0475      	IORWF      R5, 0
;__Lib_Math.c,524 :: 		
0x00A6	0x00FA      	MOVWF      R10
;__Lib_Math.c,525 :: 		
0x00A7	0x1BFA      	BTFSC      R10, 7
;__Lib_Math.c,526 :: 		
0x00A8	0x28B9      	GOTO       $+17
;__Lib_Math.c,528 :: 		
0x00A9	0x2005      	CALL       _Div_16x16_S_L
;__Lib_Math.c,530 :: 		
0x00AA	0x187B      	BTFSC      R11, 0
;__Lib_Math.c,531 :: 		
0x00AB	0x28CC      	GOTO       $+33
;__Lib_Math.c,533 :: 		
0x00AC	0x1FFD      	BTFSS      R13, 7
;__Lib_Math.c,534 :: 		
0x00AD	0x3400      	RETLW      0
;__Lib_Math.c,536 :: 		
0x00AE	0x09F0      	COMF       R0, 1
;__Lib_Math.c,537 :: 		
0x00AF	0x09F1      	COMF       R1, 1
;__Lib_Math.c,538 :: 		
0x00B0	0x0AF0      	INCF       R0, 1
;__Lib_Math.c,539 :: 		
0x00B1	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,540 :: 		
0x00B2	0x0AF1      	INCF       R1, 1
;__Lib_Math.c,542 :: 		
0x00B3	0x09F8      	COMF       R8, 1
;__Lib_Math.c,543 :: 		
0x00B4	0x09F9      	COMF       R9, 1
;__Lib_Math.c,544 :: 		
0x00B5	0x0AF8      	INCF       R8, 1
;__Lib_Math.c,545 :: 		
0x00B6	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,546 :: 		
0x00B7	0x0AF9      	INCF       R9, 1
;__Lib_Math.c,548 :: 		
0x00B8	0x3400      	RETLW      0
;__Lib_Math.c,550 :: 		
0x00B9	0x1FF5      	BTFSS      R5, 7
;__Lib_Math.c,551 :: 		
0x00BA	0x28C8      	GOTO       $+14
;__Lib_Math.c,552 :: 		
0x00BB	0x1BF1      	BTFSC      R1, 7
;__Lib_Math.c,553 :: 		
0x00BC	0x28C4      	GOTO       $+8
;__Lib_Math.c,554 :: 		
0x00BD	0x0871      	MOVF       R1, 0
;__Lib_Math.c,555 :: 		
0x00BE	0x00F9      	MOVWF      R9
;__Lib_Math.c,556 :: 		
0x00BF	0x0870      	MOVF       R0, 0
;__Lib_Math.c,557 :: 		
0x00C0	0x00F8      	MOVWF      R8
;__Lib_Math.c,558 :: 		
0x00C1	0x01F1      	CLRF       R1
;__Lib_Math.c,559 :: 		
0x00C2	0x01F0      	CLRF       R0
;__Lib_Math.c,560 :: 		
0x00C3	0x28AC      	GOTO       $-23
;__Lib_Math.c,561 :: 		
0x00C4	0x01F1      	CLRF       R1
;__Lib_Math.c,562 :: 		
0x00C5	0x01F0      	CLRF       R0
;__Lib_Math.c,563 :: 		
0x00C6	0x0AF0      	INCF       R0, 1
;__Lib_Math.c,564 :: 		
0x00C7	0x3400      	RETLW      0
;__Lib_Math.c,566 :: 		
0x00C8	0x09F1      	COMF       R1, 1
;__Lib_Math.c,567 :: 		
0x00C9	0x09F0      	COMF       R0, 1
;__Lib_Math.c,568 :: 		
0x00CA	0x0AFB      	INCF       R11, 1
;__Lib_Math.c,569 :: 		
0x00CB	0x28A9      	GOTO       $-34
;__Lib_Math.c,571 :: 		
0x00CC	0x0AF8      	INCF       R8, 1
;__Lib_Math.c,572 :: 		
0x00CD	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,573 :: 		
0x00CE	0x0AF9      	INCF       R9, 1
;__Lib_Math.c,574 :: 		
0x00CF	0x0874      	MOVF       R4, 0
;__Lib_Math.c,575 :: 		
0x00D0	0x0278      	SUBWF      R8, 0
;__Lib_Math.c,576 :: 		
0x00D1	0x1D03      	BTFSS      STATUS, 2
;__Lib_Math.c,577 :: 		
0x00D2	0x28AC      	GOTO       $-38
;__Lib_Math.c,578 :: 		
0x00D3	0x0875      	MOVF       R5, 0
;__Lib_Math.c,579 :: 		
0x00D4	0x0279      	SUBWF      R9, 0
;__Lib_Math.c,580 :: 		
0x00D5	0x1D03      	BTFSS      STATUS, 2
;__Lib_Math.c,581 :: 		
0x00D6	0x28AC      	GOTO       $-42
;__Lib_Math.c,582 :: 		
0x00D7	0x01F9      	CLRF       R9
;__Lib_Math.c,583 :: 		
0x00D8	0x01F8      	CLRF       R8
;__Lib_Math.c,584 :: 		
0x00D9	0x0AF0      	INCF       R0, 1
;__Lib_Math.c,585 :: 		
0x00DA	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,586 :: 		
0x00DB	0x0AF1      	INCF       R1, 1
;__Lib_Math.c,587 :: 		
0x00DC	0x1FF1      	BTFSS      R1, 7
;__Lib_Math.c,588 :: 		
0x00DD	0x28AC      	GOTO       $-49
;__Lib_Math.c,589 :: 		
0x00DE	0x0000      	NOP
;__Lib_Math.c,590 :: 		
0x00DF	0x34FF      	RETLW      255
;__Lib_Math.c,592 :: 		
0x00E0	0x0008      	RETURN
; end of _Div_16x16_S
_I2C1_Stop:
;__Lib_I2C_c34.c,83 :: 		
;__Lib_I2C_c34.c,84 :: 		
0x00E1	0x1683      	BSF        STATUS, 5
0x00E2	0x1303      	BCF        STATUS, 6
0x00E3	0x1511      	BSF        SSPCON2, 2
;__Lib_I2C_c34.c,85 :: 		
0x00E4	0x0008      	RETURN
; end of _I2C1_Stop
_I2C1_Rd:
;__Lib_I2C_c34.c,42 :: 		
;__Lib_I2C_c34.c,45 :: 		
0x00E5	0x1283      	BCF        STATUS, 5
0x00E6	0x1303      	BCF        STATUS, 6
0x00E7	0x118C      	BCF        PIR1, 3
;__Lib_I2C_c34.c,46 :: 		
0x00E8	0x1683      	BSF        STATUS, 5
0x00E9	0x1591      	BSF        SSPCON2, 3
;__Lib_I2C_c34.c,48 :: 		
L_I2C1_Rd12:
0x00EA	0x1283      	BCF        STATUS, 5
0x00EB	0x198C      	BTFSC      PIR1, 3
0x00EC	0x28EE      	GOTO       L_I2C1_Rd13
0x00ED	0x28EA      	GOTO       L_I2C1_Rd12
L_I2C1_Rd13:
;__Lib_I2C_c34.c,50 :: 		
0x00EE	0x0813      	MOVF       SSPBUF, 0
0x00EF	0x00F1      	MOVWF      R1
;__Lib_I2C_c34.c,51 :: 		
0x00F0	0x0847      	MOVF       FARG_I2C1_Rd_ack, 0
0x00F1	0x3A00      	XORLW      0
0x00F2	0x1D03      	BTFSS      STATUS, 2
0x00F3	0x28F7      	GOTO       L_I2C1_Rd14
;__Lib_I2C_c34.c,52 :: 		
0x00F4	0x1683      	BSF        STATUS, 5
0x00F5	0x1691      	BSF        SSPCON2, 5
0x00F6	0x28F9      	GOTO       L_I2C1_Rd15
L_I2C1_Rd14:
0x00F7	0x1683      	BSF        STATUS, 5
;__Lib_I2C_c34.c,54 :: 		
0x00F8	0x1291      	BCF        SSPCON2, 5
L_I2C1_Rd15:
;__Lib_I2C_c34.c,56 :: 		
0x00F9	0x1283      	BCF        STATUS, 5
0x00FA	0x118C      	BCF        PIR1, 3
;__Lib_I2C_c34.c,57 :: 		
0x00FB	0x1683      	BSF        STATUS, 5
0x00FC	0x1611      	BSF        SSPCON2, 4
;__Lib_I2C_c34.c,59 :: 		
L_I2C1_Rd16:
0x00FD	0x1283      	BCF        STATUS, 5
0x00FE	0x198C      	BTFSC      PIR1, 3
0x00FF	0x2901      	GOTO       L_I2C1_Rd17
0x0100	0x28FD      	GOTO       L_I2C1_Rd16
L_I2C1_Rd17:
;__Lib_I2C_c34.c,61 :: 		
0x0101	0x0871      	MOVF       R1, 0
0x0102	0x00F0      	MOVWF      R0
;__Lib_I2C_c34.c,62 :: 		
0x0103	0x0008      	RETURN
; end of _I2C1_Rd
_I2C1_Repeated_Start:
;__Lib_I2C_c34.c,36 :: 		
;__Lib_I2C_c34.c,37 :: 		
0x0104	0x1683      	BSF        STATUS, 5
0x0105	0x1303      	BCF        STATUS, 6
0x0106	0x1491      	BSF        SSPCON2, 1
;__Lib_I2C_c34.c,38 :: 		
L_I2C1_Repeated_Start10:
0x0107	0x1C91      	BTFSS      SSPCON2, 1
0x0108	0x290A      	GOTO       L_I2C1_Repeated_Start11
;__Lib_I2C_c34.c,39 :: 		
0x0109	0x2907      	GOTO       L_I2C1_Repeated_Start10
L_I2C1_Repeated_Start11:
;__Lib_I2C_c34.c,40 :: 		
0x010A	0x0008      	RETURN
; end of _I2C1_Repeated_Start
_read_ds1307:
;dc.c,163 :: 		unsigned short read_ds1307(unsigned short address)
;dc.c,166 :: 		I2C1_Start();
0x010B	0x2041      	CALL       _I2C1_Start
;dc.c,167 :: 		I2C1_Wr(0xD0); //address 0x68 followed by direction bit (0 for write, 1 for read) 0x68 followed by 0 --> 0xD0
0x010C	0x30D0      	MOVLW      208
0x010D	0x1283      	BCF        STATUS, 5
0x010E	0x1303      	BCF        STATUS, 6
0x010F	0x00C7      	MOVWF      FARG_I2C1_Wr_data_
0x0110	0x206A      	CALL       _I2C1_Wr
;dc.c,168 :: 		I2C1_Wr(address);
0x0111	0x1283      	BCF        STATUS, 5
0x0112	0x0843      	MOVF       FARG_read_ds1307_address, 0
0x0113	0x00C7      	MOVWF      FARG_I2C1_Wr_data_
0x0114	0x206A      	CALL       _I2C1_Wr
;dc.c,169 :: 		I2C1_Repeated_Start();
0x0115	0x2104      	CALL       _I2C1_Repeated_Start
;dc.c,170 :: 		I2C1_Wr(0xD1); //0x68 followed by 1 --> 0xD1
0x0116	0x30D1      	MOVLW      209
0x0117	0x1283      	BCF        STATUS, 5
0x0118	0x00C7      	MOVWF      FARG_I2C1_Wr_data_
0x0119	0x206A      	CALL       _I2C1_Wr
;dc.c,171 :: 		r_data=I2C1_Rd(0);
0x011A	0x1283      	BCF        STATUS, 5
0x011B	0x01C7      	CLRF       FARG_I2C1_Rd_ack
0x011C	0x20E5      	CALL       _I2C1_Rd
0x011D	0x0870      	MOVF       R0, 0
0x011E	0x00C4      	MOVWF      read_ds1307_r_data_L0
;dc.c,172 :: 		I2C1_Stop();
0x011F	0x20E1      	CALL       _I2C1_Stop
;dc.c,173 :: 		return(r_data);
0x0120	0x1283      	BCF        STATUS, 5
0x0121	0x0844      	MOVF       read_ds1307_r_data_L0, 0
0x0122	0x00F0      	MOVWF      R0
;dc.c,174 :: 		}
0x0123	0x0008      	RETURN
; end of _read_ds1307
_abs:
;__Lib_CStdlib.c,37 :: 		
;__Lib_CStdlib.c,38 :: 		
0x0124	0x3080      	MOVLW      128
0x0125	0x1283      	BCF        STATUS, 5
0x0126	0x1303      	BCF        STATUS, 6
0x0127	0x0644      	XORWF      FARG_abs_a+1, 0
0x0128	0x00F0      	MOVWF      R0
0x0129	0x3080      	MOVLW      128
0x012A	0x0270      	SUBWF      R0, 0
0x012B	0x1D03      	BTFSS      STATUS, 2
0x012C	0x292F      	GOTO       L__abs92
0x012D	0x3000      	MOVLW      0
0x012E	0x0243      	SUBWF      FARG_abs_a, 0
L__abs92:
0x012F	0x1803      	BTFSC      STATUS, 0
0x0130	0x293A      	GOTO       L_abs0
;__Lib_CStdlib.c,39 :: 		
0x0131	0x0843      	MOVF       FARG_abs_a, 0
0x0132	0x3C00      	SUBLW      0
0x0133	0x00F0      	MOVWF      R0
0x0134	0x0844      	MOVF       FARG_abs_a+1, 0
0x0135	0x1C03      	BTFSS      STATUS, 0
0x0136	0x3E01      	ADDLW      1
0x0137	0x01F1      	CLRF       R0+1
0x0138	0x02F1      	SUBWF      R0+1, 1
0x0139	0x0008      	RETURN
L_abs0:
;__Lib_CStdlib.c,40 :: 		
0x013A	0x0843      	MOVF       FARG_abs_a, 0
0x013B	0x00F0      	MOVWF      R0
0x013C	0x0844      	MOVF       FARG_abs_a+1, 0
0x013D	0x00F1      	MOVWF      R0+1
;__Lib_CStdlib.c,41 :: 		
0x013E	0x0008      	RETURN
; end of _abs
_Div_8x8_U:
;__Lib_Math.c,189 :: 		
;__Lib_Math.c,196 :: 		
0x013F	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,197 :: 		
0x0140	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,198 :: 		
0x0141	0x01F8      	CLRF       R8
;__Lib_Math.c,199 :: 		
0x0142	0x3008      	MOVLW      8
;__Lib_Math.c,200 :: 		
0x0143	0x00FC      	MOVWF      R12
;__Lib_Math.c,201 :: 		
0x0144	0x0D70      	RLF        R0, 0
;__Lib_Math.c,202 :: 		
0x0145	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,203 :: 		
0x0146	0x0874      	MOVF       R4, 0
;__Lib_Math.c,204 :: 		
0x0147	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,205 :: 		
0x0148	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,206 :: 		
0x0149	0x294C      	GOTO       $+3
;__Lib_Math.c,207 :: 		
0x014A	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,208 :: 		
0x014B	0x1003      	BCF        STATUS, 0
;__Lib_Math.c,209 :: 		
0x014C	0x0DF0      	RLF        R0, 1
;__Lib_Math.c,210 :: 		
0x014D	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,211 :: 		
0x014E	0x2944      	GOTO       $-10
;__Lib_Math.c,213 :: 		
0x014F	0x0008      	RETURN
; end of _Div_8x8_U
_display2:
;dc.c,83 :: 		void display2(unsigned char send_data2)
;dc.c,85 :: 		if (i==0)
0x0150	0x1283      	BCF        STATUS, 5
0x0151	0x1303      	BCF        STATUS, 6
0x0152	0x0840      	MOVF       _i, 0
0x0153	0x3A00      	XORLW      0
0x0154	0x1D03      	BTFSS      STATUS, 2
0x0155	0x2958      	GOTO       L_display216
;dc.c,86 :: 		{latch =0;
0x0156	0x1086      	BCF        PORTB, 1
;dc.c,87 :: 		clock =0;
0x0157	0x1006      	BCF        PORTB, 0
;dc.c,88 :: 		}
L_display216:
;dc.c,90 :: 		for (bit_mask2 = 1; bit_mask2; bit_mask2 <<= 1)
0x0158	0x3001      	MOVLW      1
0x0159	0x00F1      	MOVWF      R1
L_display217:
0x015A	0x0871      	MOVF       R1, 0
0x015B	0x1903      	BTFSC      STATUS, 2
0x015C	0x2970      	GOTO       L_display218
;dc.c,92 :: 		if((send_data2 & bit_mask2))
0x015D	0x0871      	MOVF       R1, 0
0x015E	0x0543      	ANDWF      FARG_display2_send_data2, 0
0x015F	0x00F0      	MOVWF      R0
0x0160	0x1903      	BTFSC      STATUS, 2
0x0161	0x2964      	GOTO       L_display220
;dc.c,93 :: 		data = 0;
0x0162	0x1106      	BCF        PORTB, 2
0x0163	0x2965      	GOTO       L_display221
L_display220:
;dc.c,96 :: 		{  data = 1;               //bit0 transfer to shift register
0x0164	0x1506      	BSF        PORTB, 2
;dc.c,97 :: 		}
L_display221:
;dc.c,98 :: 		clock =1;
0x0165	0x1406      	BSF        PORTB, 0
;dc.c,99 :: 		delay_us(10);
0x0166	0x3006      	MOVLW      6
0x0167	0x00FD      	MOVWF      R13
L_display222:
0x0168	0x0BFD      	DECFSZ     R13, 1
0x0169	0x2968      	GOTO       L_display222
0x016A	0x0000      	NOP
;dc.c,100 :: 		clock=0;
0x016B	0x1006      	BCF        PORTB, 0
;dc.c,101 :: 		i++; }
0x016C	0x0AC0      	INCF       _i, 1
;dc.c,90 :: 		for (bit_mask2 = 1; bit_mask2; bit_mask2 <<= 1)
0x016D	0x0DF1      	RLF        R1, 1
0x016E	0x1071      	BCF        R1, 0
;dc.c,101 :: 		i++; }
0x016F	0x295A      	GOTO       L_display217
L_display218:
;dc.c,103 :: 		if(i==8)
0x0170	0x0840      	MOVF       _i, 0
0x0171	0x3A08      	XORLW      8
0x0172	0x1D03      	BTFSS      STATUS, 2
0x0173	0x2975      	GOTO       L_display223
;dc.c,106 :: 		i=0;  }
0x0174	0x01C0      	CLRF       _i
L_display223:
;dc.c,107 :: 		}
0x0175	0x0008      	RETURN
; end of _display2
_write_ds1307:
;dc.c,177 :: 		void write_ds1307(unsigned short address,unsigned short w_data)
;dc.c,179 :: 		I2C1_Start(); // issue I2C start signal
0x0176	0x2041      	CALL       _I2C1_Start
;dc.c,181 :: 		I2C1_Wr(0xD0); // send byte via I2C (device address + W)
0x0177	0x30D0      	MOVLW      208
0x0178	0x1283      	BCF        STATUS, 5
0x0179	0x1303      	BCF        STATUS, 6
0x017A	0x00C7      	MOVWF      FARG_I2C1_Wr_data_
0x017B	0x206A      	CALL       _I2C1_Wr
;dc.c,182 :: 		I2C1_Wr(address); // send byte (address of DS1307 location)
0x017C	0x1283      	BCF        STATUS, 5
0x017D	0x0843      	MOVF       FARG_write_ds1307_address, 0
0x017E	0x00C7      	MOVWF      FARG_I2C1_Wr_data_
0x017F	0x206A      	CALL       _I2C1_Wr
;dc.c,183 :: 		I2C1_Wr(w_data); // send data (data to be written)
0x0180	0x1283      	BCF        STATUS, 5
0x0181	0x0844      	MOVF       FARG_write_ds1307_w_data, 0
0x0182	0x00C7      	MOVWF      FARG_I2C1_Wr_data_
0x0183	0x206A      	CALL       _I2C1_Wr
;dc.c,184 :: 		I2C1_Stop(); // issue I2C stop signal
0x0184	0x20E1      	CALL       _I2C1_Stop
;dc.c,187 :: 		}
0x0185	0x0008      	RETURN
; end of _write_ds1307
_display0:
;dc.c,134 :: 		void display0(unsigned num)
;dc.c,136 :: 		{PORTD.RD4 = 0;}
0x0186	0x1283      	BCF        STATUS, 5
0x0187	0x1303      	BCF        STATUS, 6
0x0188	0x1208      	BCF        PORTD, 4
;dc.c,137 :: 		if (k==num+1)
0x0189	0x0843      	MOVF       FARG_display0_num, 0
0x018A	0x3E01      	ADDLW      1
0x018B	0x00F1      	MOVWF      R1
0x018C	0x3000      	MOVLW      0
0x018D	0x1803      	BTFSC      STATUS, 0
0x018E	0x3E01      	ADDLW      1
0x018F	0x0744      	ADDWF      FARG_display0_num+1, 0
0x0190	0x00F2      	MOVWF      R1+1
0x0191	0x0822      	MOVF       _k+1, 0
0x0192	0x0672      	XORWF      R1+1, 0
0x0193	0x1D03      	BTFSS      STATUS, 2
0x0194	0x2997      	GOTO       L__display076
0x0195	0x0871      	MOVF       R1, 0
0x0196	0x0621      	XORWF      _k, 0
L__display076:
0x0197	0x1D03      	BTFSS      STATUS, 2
0x0198	0x29DC      	GOTO       L_display032
;dc.c,140 :: 		if(num==0 && j==0)
0x0199	0x3000      	MOVLW      0
0x019A	0x0644      	XORWF      FARG_display0_num+1, 0
0x019B	0x1D03      	BTFSS      STATUS, 2
0x019C	0x299F      	GOTO       L__display077
0x019D	0x3000      	MOVLW      0
0x019E	0x0643      	XORWF      FARG_display0_num, 0
L__display077:
0x019F	0x1D03      	BTFSS      STATUS, 2
0x01A0	0x29AF      	GOTO       L_display035
0x01A1	0x3000      	MOVLW      0
0x01A2	0x0626      	XORWF      _j+1, 0
0x01A3	0x1D03      	BTFSS      STATUS, 2
0x01A4	0x29A7      	GOTO       L__display078
0x01A5	0x3000      	MOVLW      0
0x01A6	0x0625      	XORWF      _j, 0
L__display078:
0x01A7	0x1D03      	BTFSS      STATUS, 2
0x01A8	0x29AF      	GOTO       L_display035
L__display074:
;dc.c,141 :: 		{ data1 = 1;
0x01A9	0x1408      	BSF        PORTD, 0
;dc.c,142 :: 		j = 1;  }
0x01AA	0x3001      	MOVLW      1
0x01AB	0x00A5      	MOVWF      _j
0x01AC	0x3000      	MOVLW      0
0x01AD	0x00A6      	MOVWF      _j+1
0x01AE	0x29C2      	GOTO       L_display036
L_display035:
;dc.c,144 :: 		{ if (num==0 && j==1)
0x01AF	0x3000      	MOVLW      0
0x01B0	0x0644      	XORWF      FARG_display0_num+1, 0
0x01B1	0x1D03      	BTFSS      STATUS, 2
0x01B2	0x29B5      	GOTO       L__display079
0x01B3	0x3000      	MOVLW      0
0x01B4	0x0643      	XORWF      FARG_display0_num, 0
L__display079:
0x01B5	0x1D03      	BTFSS      STATUS, 2
0x01B6	0x29C2      	GOTO       L_display039
0x01B7	0x3000      	MOVLW      0
0x01B8	0x0626      	XORWF      _j+1, 0
0x01B9	0x1D03      	BTFSS      STATUS, 2
0x01BA	0x29BD      	GOTO       L__display080
0x01BB	0x3001      	MOVLW      1
0x01BC	0x0625      	XORWF      _j, 0
L__display080:
0x01BD	0x1D03      	BTFSS      STATUS, 2
0x01BE	0x29C2      	GOTO       L_display039
L__display073:
;dc.c,145 :: 		{data1 = 0;
0x01BF	0x1008      	BCF        PORTD, 0
;dc.c,146 :: 		j = 0; }  }
0x01C0	0x01A5      	CLRF       _j
0x01C1	0x01A6      	CLRF       _j+1
L_display039:
L_display036:
;dc.c,147 :: 		n++;
0x01C2	0x0AA3      	INCF       _n, 1
0x01C3	0x1903      	BTFSC      STATUS, 2
0x01C4	0x0AA4      	INCF       _n+1, 1
;dc.c,149 :: 		clock1 =1;
0x01C5	0x1488      	BSF        PORTD, 1
;dc.c,150 :: 		delay_us(10);
0x01C6	0x3006      	MOVLW      6
0x01C7	0x00FD      	MOVWF      R13
L_display040:
0x01C8	0x0BFD      	DECFSZ     R13, 1
0x01C9	0x29C8      	GOTO       L_display040
0x01CA	0x0000      	NOP
;dc.c,151 :: 		clock1 =0;
0x01CB	0x1088      	BCF        PORTD, 1
;dc.c,153 :: 		PORTD.RD4 = 1;
0x01CC	0x1608      	BSF        PORTD, 4
;dc.c,155 :: 		k++;
0x01CD	0x0AA1      	INCF       _k, 1
0x01CE	0x1903      	BTFSC      STATUS, 2
0x01CF	0x0AA2      	INCF       _k+1, 1
;dc.c,156 :: 		if (k==61){
0x01D0	0x3000      	MOVLW      0
0x01D1	0x0622      	XORWF      _k+1, 0
0x01D2	0x1D03      	BTFSS      STATUS, 2
0x01D3	0x29D6      	GOTO       L__display081
0x01D4	0x303D      	MOVLW      61
0x01D5	0x0621      	XORWF      _k, 0
L__display081:
0x01D6	0x1D03      	BTFSS      STATUS, 2
0x01D7	0x29DC      	GOTO       L_display041
;dc.c,157 :: 		k = 1;
0x01D8	0x3001      	MOVLW      1
0x01D9	0x00A1      	MOVWF      _k
0x01DA	0x3000      	MOVLW      0
0x01DB	0x00A2      	MOVWF      _k+1
;dc.c,158 :: 		}
L_display041:
;dc.c,159 :: 		}
L_display032:
;dc.c,162 :: 		}
0x01DC	0x0008      	RETURN
; end of _display0
_Binary2BCD:
;dc.c,192 :: 		int Binary2BCD(int a)
;dc.c,195 :: 		t1 = a%10;
0x01DD	0x300A      	MOVLW      10
0x01DE	0x1283      	BCF        STATUS, 5
0x01DF	0x1303      	BCF        STATUS, 6
0x01E0	0x00F4      	MOVWF      R4
0x01E1	0x3000      	MOVLW      0
0x01E2	0x00F5      	MOVWF      R4+1
0x01E3	0x0843      	MOVF       FARG_Binary2BCD_a, 0
0x01E4	0x00F0      	MOVWF      R0
0x01E5	0x0844      	MOVF       FARG_Binary2BCD_a+1, 0
0x01E6	0x00F1      	MOVWF      R0+1
0x01E7	0x2087      	CALL       _Div_16x16_S
0x01E8	0x0878      	MOVF       R8, 0
0x01E9	0x00F0      	MOVWF      R0
0x01EA	0x0879      	MOVF       R8+1, 0
0x01EB	0x00F1      	MOVWF      R0+1
0x01EC	0x0870      	MOVF       R0, 0
0x01ED	0x00C5      	MOVWF      Binary2BCD_t1_L0
0x01EE	0x0871      	MOVF       R0+1, 0
0x01EF	0x00C6      	MOVWF      Binary2BCD_t1_L0+1
;dc.c,196 :: 		t1 = t1 & 0x0F;
0x01F0	0x300F      	MOVLW      15
0x01F1	0x0570      	ANDWF      R0, 0
0x01F2	0x00C5      	MOVWF      Binary2BCD_t1_L0
0x01F3	0x0871      	MOVF       R0+1, 0
0x01F4	0x00C6      	MOVWF      Binary2BCD_t1_L0+1
0x01F5	0x3000      	MOVLW      0
0x01F6	0x05C6      	ANDWF      Binary2BCD_t1_L0+1, 1
;dc.c,197 :: 		a = a/10;
0x01F7	0x300A      	MOVLW      10
0x01F8	0x00F4      	MOVWF      R4
0x01F9	0x3000      	MOVLW      0
0x01FA	0x00F5      	MOVWF      R4+1
0x01FB	0x0843      	MOVF       FARG_Binary2BCD_a, 0
0x01FC	0x00F0      	MOVWF      R0
0x01FD	0x0844      	MOVF       FARG_Binary2BCD_a+1, 0
0x01FE	0x00F1      	MOVWF      R0+1
0x01FF	0x2087      	CALL       _Div_16x16_S
0x0200	0x0870      	MOVF       R0, 0
0x0201	0x00C3      	MOVWF      FARG_Binary2BCD_a
0x0202	0x0871      	MOVF       R0+1, 0
0x0203	0x00C4      	MOVWF      FARG_Binary2BCD_a+1
;dc.c,198 :: 		t2 = a%10;
0x0204	0x300A      	MOVLW      10
0x0205	0x00F4      	MOVWF      R4
0x0206	0x3000      	MOVLW      0
0x0207	0x00F5      	MOVWF      R4+1
0x0208	0x2087      	CALL       _Div_16x16_S
0x0209	0x0878      	MOVF       R8, 0
0x020A	0x00F0      	MOVWF      R0
0x020B	0x0879      	MOVF       R8+1, 0
0x020C	0x00F1      	MOVWF      R0+1
;dc.c,199 :: 		t2 = 0x0F & t2;
0x020D	0x300F      	MOVLW      15
0x020E	0x0570      	ANDWF      R0, 0
0x020F	0x00F3      	MOVWF      R3
0x0210	0x0871      	MOVF       R0+1, 0
0x0211	0x00F4      	MOVWF      R3+1
0x0212	0x3000      	MOVLW      0
0x0213	0x05F4      	ANDWF      R3+1, 1
;dc.c,200 :: 		t2 = t2 << 4;
0x0214	0x3004      	MOVLW      4
0x0215	0x00F2      	MOVWF      R2
0x0216	0x0873      	MOVF       R3, 0
0x0217	0x00F0      	MOVWF      R0
0x0218	0x0874      	MOVF       R3+1, 0
0x0219	0x00F1      	MOVWF      R0+1
0x021A	0x0872      	MOVF       R2, 0
L__Binary2BCD82:
0x021B	0x1903      	BTFSC      STATUS, 2
0x021C	0x2A22      	GOTO       L__Binary2BCD83
0x021D	0x0DF0      	RLF        R0, 1
0x021E	0x0DF1      	RLF        R0+1, 1
0x021F	0x1070      	BCF        R0, 0
0x0220	0x3EFF      	ADDLW      255
0x0221	0x2A1B      	GOTO       L__Binary2BCD82
L__Binary2BCD83:
;dc.c,201 :: 		t2 = 0xF0 & t2;
0x0222	0x30F0      	MOVLW      240
0x0223	0x05F0      	ANDWF      R0, 1
0x0224	0x3000      	MOVLW      0
0x0225	0x05F1      	ANDWF      R0+1, 1
;dc.c,202 :: 		t1 = t1 | t2;
0x0226	0x0845      	MOVF       Binary2BCD_t1_L0, 0
0x0227	0x04F0      	IORWF      R0, 1
0x0228	0x0846      	MOVF       Binary2BCD_t1_L0+1, 0
0x0229	0x04F1      	IORWF      R0+1, 1
0x022A	0x0870      	MOVF       R0, 0
0x022B	0x00C5      	MOVWF      Binary2BCD_t1_L0
0x022C	0x0871      	MOVF       R0+1, 0
0x022D	0x00C6      	MOVWF      Binary2BCD_t1_L0+1
;dc.c,203 :: 		return t1;
;dc.c,204 :: 		}
0x022E	0x0008      	RETURN
; end of _Binary2BCD
_display:
;dc.c,31 :: 		void display(unsigned char send_data)
;dc.c,33 :: 		if (i==0)
0x022F	0x1283      	BCF        STATUS, 5
0x0230	0x1303      	BCF        STATUS, 6
0x0231	0x0840      	MOVF       _i, 0
0x0232	0x3A00      	XORLW      0
0x0233	0x1D03      	BTFSS      STATUS, 2
0x0234	0x2A37      	GOTO       L_display0
;dc.c,34 :: 		{latch =0;
0x0235	0x1086      	BCF        PORTB, 1
;dc.c,35 :: 		clock =0;
0x0236	0x1006      	BCF        PORTB, 0
;dc.c,36 :: 		}
L_display0:
;dc.c,38 :: 		for (bit_mask = 1; bit_mask; bit_mask <<= 1)
0x0237	0x3001      	MOVLW      1
0x0238	0x00F1      	MOVWF      R1
L_display1:
0x0239	0x0871      	MOVF       R1, 0
0x023A	0x1903      	BTFSC      STATUS, 2
0x023B	0x2A4F      	GOTO       L_display2
;dc.c,40 :: 		if((send_data & bit_mask))
0x023C	0x0871      	MOVF       R1, 0
0x023D	0x0543      	ANDWF      FARG_display_send_data, 0
0x023E	0x00F0      	MOVWF      R0
0x023F	0x1903      	BTFSC      STATUS, 2
0x0240	0x2A43      	GOTO       L_display4
;dc.c,41 :: 		data = 0;
0x0241	0x1106      	BCF        PORTB, 2
0x0242	0x2A44      	GOTO       L_display5
L_display4:
;dc.c,44 :: 		{  data = 1;               //bit0 transfer to shift register
0x0243	0x1506      	BSF        PORTB, 2
;dc.c,45 :: 		}
L_display5:
;dc.c,46 :: 		clock =1;
0x0244	0x1406      	BSF        PORTB, 0
;dc.c,47 :: 		delay_us(10);
0x0245	0x3006      	MOVLW      6
0x0246	0x00FD      	MOVWF      R13
L_display6:
0x0247	0x0BFD      	DECFSZ     R13, 1
0x0248	0x2A47      	GOTO       L_display6
0x0249	0x0000      	NOP
;dc.c,48 :: 		clock=0;
0x024A	0x1006      	BCF        PORTB, 0
;dc.c,49 :: 		i++; }
0x024B	0x0AC0      	INCF       _i, 1
;dc.c,38 :: 		for (bit_mask = 1; bit_mask; bit_mask <<= 1)
0x024C	0x0DF1      	RLF        R1, 1
0x024D	0x1071      	BCF        R1, 0
;dc.c,49 :: 		i++; }
0x024E	0x2A39      	GOTO       L_display1
L_display2:
;dc.c,51 :: 		if(i==8)
0x024F	0x0840      	MOVF       _i, 0
0x0250	0x3A08      	XORLW      8
0x0251	0x1D03      	BTFSS      STATUS, 2
0x0252	0x2A54      	GOTO       L_display7
;dc.c,54 :: 		i=0;  }
0x0253	0x01C0      	CLRF       _i
L_display7:
;dc.c,55 :: 		}
0x0254	0x0008      	RETURN
; end of _display
_display3:
;dc.c,109 :: 		void display3(unsigned char send_data3)
;dc.c,111 :: 		if (i==0)
0x0255	0x1283      	BCF        STATUS, 5
0x0256	0x1303      	BCF        STATUS, 6
0x0257	0x0840      	MOVF       _i, 0
0x0258	0x3A00      	XORLW      0
0x0259	0x1D03      	BTFSS      STATUS, 2
0x025A	0x2A5D      	GOTO       L_display324
;dc.c,112 :: 		{latch =0;
0x025B	0x1086      	BCF        PORTB, 1
;dc.c,113 :: 		clock =0;
0x025C	0x1006      	BCF        PORTB, 0
;dc.c,114 :: 		}
L_display324:
;dc.c,116 :: 		for (bit_mask3 = 1; bit_mask3; bit_mask3 <<= 1)
0x025D	0x3001      	MOVLW      1
0x025E	0x00F1      	MOVWF      R1
L_display325:
0x025F	0x0871      	MOVF       R1, 0
0x0260	0x1903      	BTFSC      STATUS, 2
0x0261	0x2A75      	GOTO       L_display326
;dc.c,118 :: 		if((send_data3 & bit_mask3))
0x0262	0x0871      	MOVF       R1, 0
0x0263	0x0543      	ANDWF      FARG_display3_send_data3, 0
0x0264	0x00F0      	MOVWF      R0
0x0265	0x1903      	BTFSC      STATUS, 2
0x0266	0x2A69      	GOTO       L_display328
;dc.c,119 :: 		data = 0;
0x0267	0x1106      	BCF        PORTB, 2
0x0268	0x2A6A      	GOTO       L_display329
L_display328:
;dc.c,122 :: 		{  data = 1;               //bit0 transfer to shift register
0x0269	0x1506      	BSF        PORTB, 2
;dc.c,123 :: 		}
L_display329:
;dc.c,124 :: 		clock =1;
0x026A	0x1406      	BSF        PORTB, 0
;dc.c,125 :: 		delay_us(10);
0x026B	0x3006      	MOVLW      6
0x026C	0x00FD      	MOVWF      R13
L_display330:
0x026D	0x0BFD      	DECFSZ     R13, 1
0x026E	0x2A6D      	GOTO       L_display330
0x026F	0x0000      	NOP
;dc.c,126 :: 		clock=0;
0x0270	0x1006      	BCF        PORTB, 0
;dc.c,127 :: 		i++; }
0x0271	0x0AC0      	INCF       _i, 1
;dc.c,116 :: 		for (bit_mask3 = 1; bit_mask3; bit_mask3 <<= 1)
0x0272	0x0DF1      	RLF        R1, 1
0x0273	0x1071      	BCF        R1, 0
;dc.c,127 :: 		i++; }
0x0274	0x2A5F      	GOTO       L_display325
L_display326:
;dc.c,129 :: 		if(i==8)
0x0275	0x0840      	MOVF       _i, 0
0x0276	0x3A08      	XORLW      8
0x0277	0x1D03      	BTFSS      STATUS, 2
0x0278	0x2A7B      	GOTO       L_display331
;dc.c,131 :: 		latch=1;
0x0279	0x1486      	BSF        PORTB, 1
;dc.c,132 :: 		i=0;  }
0x027A	0x01C0      	CLRF       _i
L_display331:
;dc.c,133 :: 		}
0x027B	0x0008      	RETURN
; end of _display3
_display1:
;dc.c,57 :: 		void display1(unsigned char send_data1)
;dc.c,59 :: 		if (i==0)
0x027C	0x1283      	BCF        STATUS, 5
0x027D	0x1303      	BCF        STATUS, 6
0x027E	0x0840      	MOVF       _i, 0
0x027F	0x3A00      	XORLW      0
0x0280	0x1D03      	BTFSS      STATUS, 2
0x0281	0x2A84      	GOTO       L_display18
;dc.c,60 :: 		{latch =0;
0x0282	0x1086      	BCF        PORTB, 1
;dc.c,61 :: 		clock =0;
0x0283	0x1006      	BCF        PORTB, 0
;dc.c,62 :: 		}
L_display18:
;dc.c,64 :: 		for (bit_mask1 = 1; bit_mask1; bit_mask1 <<= 1)
0x0284	0x3001      	MOVLW      1
0x0285	0x00F1      	MOVWF      R1
L_display19:
0x0286	0x0871      	MOVF       R1, 0
0x0287	0x1903      	BTFSC      STATUS, 2
0x0288	0x2A9C      	GOTO       L_display110
;dc.c,66 :: 		if((send_data1 & bit_mask1))
0x0289	0x0871      	MOVF       R1, 0
0x028A	0x0543      	ANDWF      FARG_display1_send_data1, 0
0x028B	0x00F0      	MOVWF      R0
0x028C	0x1903      	BTFSC      STATUS, 2
0x028D	0x2A90      	GOTO       L_display112
;dc.c,67 :: 		data = 0;
0x028E	0x1106      	BCF        PORTB, 2
0x028F	0x2A91      	GOTO       L_display113
L_display112:
;dc.c,70 :: 		{  data = 1;               //bit0 transfer to shift register
0x0290	0x1506      	BSF        PORTB, 2
;dc.c,71 :: 		}
L_display113:
;dc.c,72 :: 		clock =1;
0x0291	0x1406      	BSF        PORTB, 0
;dc.c,73 :: 		delay_us(10);
0x0292	0x3006      	MOVLW      6
0x0293	0x00FD      	MOVWF      R13
L_display114:
0x0294	0x0BFD      	DECFSZ     R13, 1
0x0295	0x2A94      	GOTO       L_display114
0x0296	0x0000      	NOP
;dc.c,74 :: 		clock=0;
0x0297	0x1006      	BCF        PORTB, 0
;dc.c,75 :: 		i++; }
0x0298	0x0AC0      	INCF       _i, 1
;dc.c,64 :: 		for (bit_mask1 = 1; bit_mask1; bit_mask1 <<= 1)
0x0299	0x0DF1      	RLF        R1, 1
0x029A	0x1071      	BCF        R1, 0
;dc.c,75 :: 		i++; }
0x029B	0x2A86      	GOTO       L_display19
L_display110:
;dc.c,77 :: 		if(i==8)
0x029C	0x0840      	MOVF       _i, 0
0x029D	0x3A08      	XORLW      8
0x029E	0x1D03      	BTFSS      STATUS, 2
0x029F	0x2AA1      	GOTO       L_display115
;dc.c,80 :: 		i=0;  }
0x02A0	0x01C0      	CLRF       _i
L_display115:
;dc.c,81 :: 		}
0x02A1	0x0008      	RETURN
; end of _display1
_Mul_8x8_U:
;__Lib_Math.c,103 :: 		
;__Lib_Math.c,108 :: 		
0x02A2	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,109 :: 		
0x02A3	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,110 :: 		
0x02A4	0x0870      	MOVF       R0, 0
;__Lib_Math.c,111 :: 		
0x02A5	0x00F1      	MOVWF      R1
;__Lib_Math.c,112 :: 		
0x02A6	0x01F0      	CLRF       R0
;__Lib_Math.c,113 :: 		
0x02A7	0x3008      	MOVLW      8
;__Lib_Math.c,114 :: 		
0x02A8	0x00FC      	MOVWF      R12
;__Lib_Math.c,115 :: 		
0x02A9	0x0871      	MOVF       R1, 0
;__Lib_Math.c,116 :: 		
0x02AA	0x0CF4      	RRF        R4, 1
;__Lib_Math.c,117 :: 		
0x02AB	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,118 :: 		
0x02AC	0x2AB1      	GOTO       $+5
;__Lib_Math.c,119 :: 		
0x02AD	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,120 :: 		
0x02AE	0x2AAA      	GOTO       $-4
;__Lib_Math.c,121 :: 		
0x02AF	0x01F1      	CLRF       R1
;__Lib_Math.c,122 :: 		
0x02B0	0x3400      	RETLW      0
;__Lib_Math.c,123 :: 		
0x02B1	0x1003      	BCF        STATUS, 0
;__Lib_Math.c,124 :: 		
0x02B2	0x2AB6      	GOTO       $+4
;__Lib_Math.c,125 :: 		
0x02B3	0x0CF4      	RRF        R4, 1
;__Lib_Math.c,126 :: 		
0x02B4	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,127 :: 		
0x02B5	0x07F1      	ADDWF      R1, 1
;__Lib_Math.c,128 :: 		
0x02B6	0x0CF1      	RRF        R1, 1
;__Lib_Math.c,129 :: 		
0x02B7	0x0CF0      	RRF        R0, 1
;__Lib_Math.c,130 :: 		
0x02B8	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,131 :: 		
0x02B9	0x2AB3      	GOTO       $-6
;__Lib_Math.c,133 :: 		
;__Lib_Math.c,134 :: 		
0x02BA	0x0008      	RETURN
; end of _Mul_8x8_U
___CC2DW:
;__Lib_System.c,24 :: 		
;__Lib_System.c,27 :: 		
_CC2D_Loop1:
;__Lib_System.c,29 :: 		
0x02BB	0x2080      	CALL       _____DoICP
0x02BC	0x118A      	BCF        PCLATH, 3
0x02BD	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,31 :: 		
0x02BE	0x0080      	MOVWF      INDF
;__Lib_System.c,32 :: 		
0x02BF	0x0A84      	INCF       FSR, 1
;__Lib_System.c,33 :: 		
0x02C0	0x0AC1      	INCF       ___DoICPAddr, 1
;__Lib_System.c,35 :: 		
0x02C1	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,36 :: 		
0x02C2	0x0AC2      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,37 :: 		
0x02C3	0x03F0      	DECF       R0, 1
;__Lib_System.c,39 :: 		
0x02C4	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,40 :: 		
0x02C5	0x2ABB      	GOTO       _CC2D_Loop1
;__Lib_System.c,42 :: 		
0x02C6	0x0008      	RETURN
; end of ___CC2DW
_I2C1_Init:
;__Lib_I2C_c34.c,2 :: 		
;__Lib_I2C_c34.c,3 :: 		
0x02C7	0x1683      	BSF        STATUS, 5
0x02C8	0x1303      	BCF        STATUS, 6
0x02C9	0x1314      	BCF        SSPSTAT, 6
;__Lib_I2C_c34.c,4 :: 		
0x02CA	0x1394      	BCF        SSPSTAT, 7
;__Lib_I2C_c34.c,5 :: 		
0x02CB	0x1607      	BSF        TRISC4_bit, 4
;__Lib_I2C_c34.c,6 :: 		
0x02CC	0x1587      	BSF        TRISC3_bit, 3
;__Lib_I2C_c34.c,7 :: 		
0x02CD	0x3038      	MOVLW      56
0x02CE	0x1283      	BCF        STATUS, 5
0x02CF	0x0094      	MOVWF      SSPCON
;__Lib_I2C_c34.c,9 :: 		
0x02D0	0x0008      	RETURN
; end of _I2C1_Init
_main:
;dc.c,209 :: 		void main()
;dc.c,212 :: 		I2C1_Init(100000); //DS1307 I2C is running at 100KHz
0x02D1	0x1283      	BCF        STATUS, 5
0x02D2	0x1303      	BCF        STATUS, 6
0x02D3	0x01A0      	CLRF       _set_count
0x02D4	0x3001      	MOVLW      1
0x02D5	0x00A1      	MOVWF      _k
0x02D6	0x01A2      	CLRF       34
0x02D7	0x01A3      	CLRF       _n
0x02D8	0x01A4      	CLRF       36
0x02D9	0x01A5      	CLRF       _j
0x02DA	0x01A6      	CLRF       38
0x02DB	0x30A0      	MOVLW      160
0x02DC	0x00A7      	MOVWF      _number
0x02DD	0x30F9      	MOVLW      249
0x02DE	0x00A8      	MOVWF      40
0x02DF	0x3064      	MOVLW      100
0x02E0	0x00A9      	MOVWF      41
0x02E1	0x3070      	MOVLW      112
0x02E2	0x00AA      	MOVWF      42
0x02E3	0x3039      	MOVLW      57
0x02E4	0x00AB      	MOVWF      43
0x02E5	0x3032      	MOVLW      50
0x02E6	0x00AC      	MOVWF      44
0x02E7	0x3022      	MOVLW      34
0x02E8	0x00AD      	MOVWF      45
0x02E9	0x30F8      	MOVLW      248
0x02EA	0x00AE      	MOVWF      46
0x02EB	0x3020      	MOVLW      32
0x02EC	0x00AF      	MOVWF      47
0x02ED	0x3030      	MOVLW      48
0x02EE	0x00B0      	MOVWF      48
0x02EF	0x3014      	MOVLW      20
0x02F0	0x1683      	BSF        STATUS, 5
0x02F1	0x0093      	MOVWF      SSPADD
0x02F2	0x22C7      	CALL       _I2C1_Init
;dc.c,214 :: 		CMCON = 0x07;   // To turn off comparators
0x02F3	0x3007      	MOVLW      7
0x02F4	0x1683      	BSF        STATUS, 5
0x02F5	0x009C      	MOVWF      CMCON
;dc.c,215 :: 		ADCON1 = 0x06;  // To turn off analog to digital converters
0x02F6	0x3006      	MOVLW      6
0x02F7	0x009F      	MOVWF      ADCON1
;dc.c,217 :: 		TRISA = 0x07;
0x02F8	0x3007      	MOVLW      7
0x02F9	0x0085      	MOVWF      TRISA
;dc.c,218 :: 		PORTA = 0x00;
0x02FA	0x1283      	BCF        STATUS, 5
0x02FB	0x0185      	CLRF       PORTA
;dc.c,219 :: 		TRISB = 0x00;
0x02FC	0x1683      	BSF        STATUS, 5
0x02FD	0x0186      	CLRF       TRISB
;dc.c,220 :: 		PORTB = 0x00;
0x02FE	0x1283      	BCF        STATUS, 5
0x02FF	0x0186      	CLRF       PORTB
;dc.c,221 :: 		TRISD = 0x00;
0x0300	0x1683      	BSF        STATUS, 5
0x0301	0x0188      	CLRF       TRISD
;dc.c,222 :: 		PORTD = 0x00;
0x0302	0x1283      	BCF        STATUS, 5
0x0303	0x0188      	CLRF       PORTD
;dc.c,224 :: 		PORTB.F3 = 1 ;
0x0304	0x1586      	BSF        PORTB, 3
;dc.c,228 :: 		do {
L_main42:
;dc.c,230 :: 		set = 0;
0x0305	0x01B7      	CLRF       _set
;dc.c,231 :: 		if(PORTA.F0 == 0)
0x0306	0x1805      	BTFSC      PORTA, 0
0x0307	0x2B1D      	GOTO       L_main44
;dc.c,233 :: 		Delay_ms(100);
0x0308	0x3002      	MOVLW      2
0x0309	0x00FB      	MOVWF      R11
0x030A	0x3004      	MOVLW      4
0x030B	0x00FC      	MOVWF      R12
0x030C	0x30BA      	MOVLW      186
0x030D	0x00FD      	MOVWF      R13
L_main45:
0x030E	0x0BFD      	DECFSZ     R13, 1
0x030F	0x2B0E      	GOTO       L_main45
0x0310	0x0BFC      	DECFSZ     R12, 1
0x0311	0x2B0E      	GOTO       L_main45
0x0312	0x0BFB      	DECFSZ     R11, 1
0x0313	0x2B0E      	GOTO       L_main45
0x0314	0x0000      	NOP
;dc.c,234 :: 		if(PORTA.F0 == 0)
0x0315	0x1805      	BTFSC      PORTA, 0
0x0316	0x2B1D      	GOTO       L_main46
;dc.c,236 :: 		set_count++;
0x0317	0x0AA0      	INCF       _set_count, 1
;dc.c,240 :: 		if(set_count >= 4)
0x0318	0x3004      	MOVLW      4
0x0319	0x0220      	SUBWF      _set_count, 0
0x031A	0x1C03      	BTFSS      STATUS, 0
0x031B	0x2B1D      	GOTO       L_main47
;dc.c,242 :: 		set_count = 0;
0x031C	0x01A0      	CLRF       _set_count
;dc.c,243 :: 		}
L_main47:
;dc.c,244 :: 		}
L_main46:
;dc.c,245 :: 		}
L_main44:
;dc.c,246 :: 		if(set_count)
0x031D	0x0820      	MOVF       _set_count, 0
0x031E	0x1903      	BTFSC      STATUS, 2
0x031F	0x2BC4      	GOTO       L_main48
;dc.c,248 :: 		if(PORTA.F1 == 0)
0x0320	0x1885      	BTFSC      PORTA, 1
0x0321	0x2B33      	GOTO       L_main49
;dc.c,250 :: 		Delay_ms(100);
0x0322	0x3002      	MOVLW      2
0x0323	0x00FB      	MOVWF      R11
0x0324	0x3004      	MOVLW      4
0x0325	0x00FC      	MOVWF      R12
0x0326	0x30BA      	MOVLW      186
0x0327	0x00FD      	MOVWF      R13
L_main50:
0x0328	0x0BFD      	DECFSZ     R13, 1
0x0329	0x2B28      	GOTO       L_main50
0x032A	0x0BFC      	DECFSZ     R12, 1
0x032B	0x2B28      	GOTO       L_main50
0x032C	0x0BFB      	DECFSZ     R11, 1
0x032D	0x2B28      	GOTO       L_main50
0x032E	0x0000      	NOP
;dc.c,251 :: 		if(PORTA.F1 == 0)
0x032F	0x1885      	BTFSC      PORTA, 1
0x0330	0x2B33      	GOTO       L_main51
;dc.c,252 :: 		set = 1;
0x0331	0x3001      	MOVLW      1
0x0332	0x00B7      	MOVWF      _set
L_main51:
;dc.c,253 :: 		}
L_main49:
;dc.c,255 :: 		if(PORTA.F2 == 0)
0x0333	0x1905      	BTFSC      PORTA, 2
0x0334	0x2B46      	GOTO       L_main52
;dc.c,257 :: 		Delay_ms(100);
0x0335	0x3002      	MOVLW      2
0x0336	0x00FB      	MOVWF      R11
0x0337	0x3004      	MOVLW      4
0x0338	0x00FC      	MOVWF      R12
0x0339	0x30BA      	MOVLW      186
0x033A	0x00FD      	MOVWF      R13
L_main53:
0x033B	0x0BFD      	DECFSZ     R13, 1
0x033C	0x2B3B      	GOTO       L_main53
0x033D	0x0BFC      	DECFSZ     R12, 1
0x033E	0x2B3B      	GOTO       L_main53
0x033F	0x0BFB      	DECFSZ     R11, 1
0x0340	0x2B3B      	GOTO       L_main53
0x0341	0x0000      	NOP
;dc.c,258 :: 		if(PORTA.F2 == 0)
0x0342	0x1905      	BTFSC      PORTA, 2
0x0343	0x2B46      	GOTO       L_main54
;dc.c,259 :: 		set = -1;
0x0344	0x30FF      	MOVLW      255
0x0345	0x00B7      	MOVWF      _set
L_main54:
;dc.c,260 :: 		}
L_main52:
;dc.c,261 :: 		if(set_count && set)
0x0346	0x0820      	MOVF       _set_count, 0
0x0347	0x1903      	BTFSC      STATUS, 2
0x0348	0x2BC4      	GOTO       L_main57
0x0349	0x0837      	MOVF       _set, 0
0x034A	0x1903      	BTFSC      STATUS, 2
0x034B	0x2BC4      	GOTO       L_main57
L__main75:
;dc.c,263 :: 		switch(set_count)
0x034C	0x2BB7      	GOTO       L_main58
;dc.c,265 :: 		case 1:
L_main60:
;dc.c,267 :: 		hour1= (hour>>4)*10+(hour&0x0F);
0x034D	0x0836      	MOVF       _hour, 0
0x034E	0x00F0      	MOVWF      R0
0x034F	0x0CF0      	RRF        R0, 1
0x0350	0x13F0      	BCF        R0, 7
0x0351	0x0CF0      	RRF        R0, 1
0x0352	0x13F0      	BCF        R0, 7
0x0353	0x0CF0      	RRF        R0, 1
0x0354	0x13F0      	BCF        R0, 7
0x0355	0x0CF0      	RRF        R0, 1
0x0356	0x13F0      	BCF        R0, 7
0x0357	0x300A      	MOVLW      10
0x0358	0x00F4      	MOVWF      R4
0x0359	0x22A2      	CALL       _Mul_8x8_U
0x035A	0x300F      	MOVLW      15
0x035B	0x0536      	ANDWF      _hour, 0
0x035C	0x00F1      	MOVWF      R1
0x035D	0x0871      	MOVF       R1, 0
0x035E	0x07F0      	ADDWF      R0, 1
0x035F	0x0870      	MOVF       R0, 0
0x0360	0x00B8      	MOVWF      _hour1
;dc.c,268 :: 		hour1 = hour1 +set;
0x0361	0x0837      	MOVF       _set, 0
0x0362	0x07F0      	ADDWF      R0, 1
0x0363	0x0870      	MOVF       R0, 0
0x0364	0x00B8      	MOVWF      _hour1
;dc.c,269 :: 		hour1 = Binary2BCD(hour1);
0x0365	0x0870      	MOVF       R0, 0
0x0366	0x00C3      	MOVWF      FARG_Binary2BCD_a
0x0367	0x01C4      	CLRF       FARG_Binary2BCD_a+1
0x0368	0x21DD      	CALL       _Binary2BCD
0x0369	0x0870      	MOVF       R0, 0
0x036A	0x00B8      	MOVWF      _hour1
;dc.c,271 :: 		if((hour1  ) >= 0x24)
0x036B	0x3024      	MOVLW      36
0x036C	0x0270      	SUBWF      R0, 0
0x036D	0x1C03      	BTFSS      STATUS, 0
0x036E	0x2B70      	GOTO       L_main61
;dc.c,272 :: 		hour1 = 0x00;
0x036F	0x01B8      	CLRF       _hour1
L_main61:
;dc.c,274 :: 		write_ds1307(2,hour1); //write hour
0x0370	0x3002      	MOVLW      2
0x0371	0x00C3      	MOVWF      FARG_write_ds1307_address
0x0372	0x0838      	MOVF       _hour1, 0
0x0373	0x00C4      	MOVWF      FARG_write_ds1307_w_data
0x0374	0x2176      	CALL       _write_ds1307
;dc.c,276 :: 		break;
0x0375	0x2BC4      	GOTO       L_main59
;dc.c,277 :: 		case 2:
L_main62:
;dc.c,279 :: 		minute1= (minute>>4)*10+(minute&0x0F);
0x0376	0x1283      	BCF        STATUS, 5
0x0377	0x0831      	MOVF       _minute, 0
0x0378	0x00F0      	MOVWF      R0
0x0379	0x0CF0      	RRF        R0, 1
0x037A	0x13F0      	BCF        R0, 7
0x037B	0x0CF0      	RRF        R0, 1
0x037C	0x13F0      	BCF        R0, 7
0x037D	0x0CF0      	RRF        R0, 1
0x037E	0x13F0      	BCF        R0, 7
0x037F	0x0CF0      	RRF        R0, 1
0x0380	0x13F0      	BCF        R0, 7
0x0381	0x300A      	MOVLW      10
0x0382	0x00F4      	MOVWF      R4
0x0383	0x22A2      	CALL       _Mul_8x8_U
0x0384	0x300F      	MOVLW      15
0x0385	0x0531      	ANDWF      _minute, 0
0x0386	0x00F1      	MOVWF      R1
0x0387	0x0871      	MOVF       R1, 0
0x0388	0x07F0      	ADDWF      R0, 1
0x0389	0x0870      	MOVF       R0, 0
0x038A	0x00B2      	MOVWF      _minute1
;dc.c,280 :: 		minute1 = minute1 + set;
0x038B	0x0837      	MOVF       _set, 0
0x038C	0x0770      	ADDWF      R0, 0
0x038D	0x00F1      	MOVWF      R1
0x038E	0x0871      	MOVF       R1, 0
0x038F	0x00B2      	MOVWF      _minute1
;dc.c,282 :: 		if(minute1 >= 59)
0x0390	0x303B      	MOVLW      59
0x0391	0x0271      	SUBWF      R1, 0
0x0392	0x1C03      	BTFSS      STATUS, 0
0x0393	0x2B95      	GOTO       L_main63
;dc.c,283 :: 		minute1 = 0;
0x0394	0x01B2      	CLRF       _minute1
L_main63:
;dc.c,284 :: 		if(minute1 <= 0)
0x0395	0x0832      	MOVF       _minute1, 0
0x0396	0x3C00      	SUBLW      0
0x0397	0x1C03      	BTFSS      STATUS, 0
0x0398	0x2B9B      	GOTO       L_main64
;dc.c,285 :: 		minute1 = 59;
0x0399	0x303B      	MOVLW      59
0x039A	0x00B2      	MOVWF      _minute1
L_main64:
;dc.c,287 :: 		minute1 = Binary2BCD(minute1);
0x039B	0x0832      	MOVF       _minute1, 0
0x039C	0x00C3      	MOVWF      FARG_Binary2BCD_a
0x039D	0x01C4      	CLRF       FARG_Binary2BCD_a+1
0x039E	0x21DD      	CALL       _Binary2BCD
0x039F	0x0870      	MOVF       R0, 0
0x03A0	0x00B2      	MOVWF      _minute1
;dc.c,288 :: 		write_ds1307(1, minute1); //write min
0x03A1	0x3001      	MOVLW      1
0x03A2	0x00C3      	MOVWF      FARG_write_ds1307_address
0x03A3	0x0870      	MOVF       R0, 0
0x03A4	0x00C4      	MOVWF      FARG_write_ds1307_w_data
0x03A5	0x2176      	CALL       _write_ds1307
;dc.c,290 :: 		break;
0x03A6	0x2BC4      	GOTO       L_main59
;dc.c,291 :: 		case 3:
L_main65:
;dc.c,292 :: 		if(abs(set))
0x03A7	0x1283      	BCF        STATUS, 5
0x03A8	0x0837      	MOVF       _set, 0
0x03A9	0x00C3      	MOVWF      FARG_abs_a
0x03AA	0x3000      	MOVLW      0
0x03AB	0x1BC3      	BTFSC      FARG_abs_a, 7
0x03AC	0x30FF      	MOVLW      255
0x03AD	0x00C4      	MOVWF      FARG_abs_a+1
0x03AE	0x2124      	CALL       _abs
0x03AF	0x0870      	MOVF       R0, 0
0x03B0	0x0471      	IORWF      R0+1, 0
0x03B1	0x1903      	BTFSC      STATUS, 2
0x03B2	0x2BB6      	GOTO       L_main66
;dc.c,293 :: 		write_ds1307(0,0x00); //Reset second to 0 sec. and start Oscillator
0x03B3	0x01C3      	CLRF       FARG_write_ds1307_address
0x03B4	0x01C4      	CLRF       FARG_write_ds1307_w_data
0x03B5	0x2176      	CALL       _write_ds1307
L_main66:
;dc.c,294 :: 		break;
0x03B6	0x2BC4      	GOTO       L_main59
;dc.c,295 :: 		}
L_main58:
0x03B7	0x1283      	BCF        STATUS, 5
0x03B8	0x0820      	MOVF       _set_count, 0
0x03B9	0x3A01      	XORLW      1
0x03BA	0x1903      	BTFSC      STATUS, 2
0x03BB	0x2B4D      	GOTO       L_main60
0x03BC	0x0820      	MOVF       _set_count, 0
0x03BD	0x3A02      	XORLW      2
0x03BE	0x1903      	BTFSC      STATUS, 2
0x03BF	0x2B76      	GOTO       L_main62
0x03C0	0x0820      	MOVF       _set_count, 0
0x03C1	0x3A03      	XORLW      3
0x03C2	0x1903      	BTFSC      STATUS, 2
0x03C3	0x2BA7      	GOTO       L_main65
L_main59:
;dc.c,296 :: 		}
L_main57:
;dc.c,297 :: 		}
L_main48:
0x03C4	0x1283      	BCF        STATUS, 5
;dc.c,301 :: 		second = read_ds1307(0);
0x03C5	0x01C3      	CLRF       FARG_read_ds1307_address
0x03C6	0x210B      	CALL       _read_ds1307
0x03C7	0x0870      	MOVF       R0, 0
0x03C8	0x00B3      	MOVWF      _second
;dc.c,302 :: 		minute = read_ds1307(1);
0x03C9	0x3001      	MOVLW      1
0x03CA	0x00C3      	MOVWF      FARG_read_ds1307_address
0x03CB	0x210B      	CALL       _read_ds1307
0x03CC	0x0870      	MOVF       R0, 0
0x03CD	0x00B1      	MOVWF      _minute
;dc.c,303 :: 		hour = read_ds1307(2);
0x03CE	0x3002      	MOVLW      2
0x03CF	0x00C3      	MOVWF      FARG_read_ds1307_address
0x03D0	0x210B      	CALL       _read_ds1307
0x03D1	0x0870      	MOVF       R0, 0
0x03D2	0x00B6      	MOVWF      _hour
;dc.c,304 :: 		second1= (second>>4)*10+(second&0x0F);
0x03D3	0x0833      	MOVF       _second, 0
0x03D4	0x00F0      	MOVWF      R0
0x03D5	0x0CF0      	RRF        R0, 1
0x03D6	0x13F0      	BCF        R0, 7
0x03D7	0x0CF0      	RRF        R0, 1
0x03D8	0x13F0      	BCF        R0, 7
0x03D9	0x0CF0      	RRF        R0, 1
0x03DA	0x13F0      	BCF        R0, 7
0x03DB	0x0CF0      	RRF        R0, 1
0x03DC	0x13F0      	BCF        R0, 7
0x03DD	0x300A      	MOVLW      10
0x03DE	0x00F4      	MOVWF      R4
0x03DF	0x22A2      	CALL       _Mul_8x8_U
0x03E0	0x300F      	MOVLW      15
0x03E1	0x0533      	ANDWF      _second, 0
0x03E2	0x00F1      	MOVWF      R1
0x03E3	0x0871      	MOVF       R1, 0
0x03E4	0x0770      	ADDWF      R0, 0
0x03E5	0x00B5      	MOVWF      _second1
;dc.c,305 :: 		minute1= (minute>>4)*10+(minute&0x0F);
0x03E6	0x0831      	MOVF       _minute, 0
0x03E7	0x00F0      	MOVWF      R0
0x03E8	0x0CF0      	RRF        R0, 1
0x03E9	0x13F0      	BCF        R0, 7
0x03EA	0x0CF0      	RRF        R0, 1
0x03EB	0x13F0      	BCF        R0, 7
0x03EC	0x0CF0      	RRF        R0, 1
0x03ED	0x13F0      	BCF        R0, 7
0x03EE	0x0CF0      	RRF        R0, 1
0x03EF	0x13F0      	BCF        R0, 7
0x03F0	0x300A      	MOVLW      10
0x03F1	0x00F4      	MOVWF      R4
0x03F2	0x22A2      	CALL       _Mul_8x8_U
0x03F3	0x300F      	MOVLW      15
0x03F4	0x0531      	ANDWF      _minute, 0
0x03F5	0x00F1      	MOVWF      R1
0x03F6	0x0871      	MOVF       R1, 0
0x03F7	0x0770      	ADDWF      R0, 0
0x03F8	0x00B2      	MOVWF      _minute1
;dc.c,306 :: 		hour1= (hour>>4)*10+(hour&0x0F);
0x03F9	0x0836      	MOVF       _hour, 0
0x03FA	0x00F0      	MOVWF      R0
0x03FB	0x0CF0      	RRF        R0, 1
0x03FC	0x13F0      	BCF        R0, 7
0x03FD	0x0CF0      	RRF        R0, 1
0x03FE	0x13F0      	BCF        R0, 7
0x03FF	0x0CF0      	RRF        R0, 1
0x0400	0x13F0      	BCF        R0, 7
0x0401	0x0CF0      	RRF        R0, 1
0x0402	0x13F0      	BCF        R0, 7
0x0403	0x300A      	MOVLW      10
0x0404	0x00F4      	MOVWF      R4
0x0405	0x22A2      	CALL       _Mul_8x8_U
0x0406	0x300F      	MOVLW      15
0x0407	0x0536      	ANDWF      _hour, 0
0x0408	0x00F1      	MOVWF      R1
0x0409	0x0870      	MOVF       R0, 0
0x040A	0x07F1      	ADDWF      R1, 1
0x040B	0x0871      	MOVF       R1, 0
0x040C	0x00B8      	MOVWF      _hour1
;dc.c,307 :: 		if(hour1==0)
0x040D	0x0871      	MOVF       R1, 0
0x040E	0x3A00      	XORLW      0
0x040F	0x1D03      	BTFSS      STATUS, 2
0x0410	0x2C14      	GOTO       L_main67
;dc.c,308 :: 		hour1+=12;
0x0411	0x300C      	MOVLW      12
0x0412	0x07B8      	ADDWF      _hour1, 1
0x0413	0x2C1A      	GOTO       L_main68
L_main67:
;dc.c,309 :: 		else if(hour1>=13)
0x0414	0x300D      	MOVLW      13
0x0415	0x0238      	SUBWF      _hour1, 0
0x0416	0x1C03      	BTFSS      STATUS, 0
0x0417	0x2C1A      	GOTO       L_main69
;dc.c,310 :: 		hour1-=12;
0x0418	0x300C      	MOVLW      12
0x0419	0x02B8      	SUBWF      _hour1, 1
L_main69:
L_main68:
;dc.c,311 :: 		Count1 = minute1;
0x041A	0x0832      	MOVF       _minute1, 0
0x041B	0x00B4      	MOVWF      _Count1
;dc.c,312 :: 		Count2 = hour1;
0x041C	0x0838      	MOVF       _hour1, 0
0x041D	0x00BD      	MOVWF      _Count2
;dc.c,313 :: 		count3 = second1;
0x041E	0x0835      	MOVF       _second1, 0
0x041F	0x00BC      	MOVWF      _count3
;dc.c,316 :: 		DD0 = (Count1)%10;  // ExtRAct Ones Digit
0x0420	0x300A      	MOVLW      10
0x0421	0x00F4      	MOVWF      R4
0x0422	0x0832      	MOVF       _minute1, 0
0x0423	0x00F0      	MOVWF      R0
0x0424	0x213F      	CALL       _Div_8x8_U
0x0425	0x0878      	MOVF       R8, 0
0x0426	0x00F0      	MOVWF      R0
0x0427	0x0870      	MOVF       R0, 0
0x0428	0x00BE      	MOVWF      _DD0
;dc.c,317 :: 		display(number[DD0]);
0x0429	0x0870      	MOVF       R0, 0
0x042A	0x3E27      	ADDLW      _number
0x042B	0x0084      	MOVWF      FSR
0x042C	0x0800      	MOVF       INDF, 0
0x042D	0x00C3      	MOVWF      FARG_display_send_data
0x042E	0x222F      	CALL       _display
;dc.c,318 :: 		DD1 = (Count1/10)%10; // ExtRAct Tens Digit
0x042F	0x300A      	MOVLW      10
0x0430	0x00F4      	MOVWF      R4
0x0431	0x0834      	MOVF       _Count1, 0
0x0432	0x00F0      	MOVWF      R0
0x0433	0x213F      	CALL       _Div_8x8_U
0x0434	0x300A      	MOVLW      10
0x0435	0x00F4      	MOVWF      R4
0x0436	0x213F      	CALL       _Div_8x8_U
0x0437	0x0878      	MOVF       R8, 0
0x0438	0x00F0      	MOVWF      R0
0x0439	0x0870      	MOVF       R0, 0
0x043A	0x00BF      	MOVWF      _DD1
;dc.c,319 :: 		display1(number[DD1]);
0x043B	0x0870      	MOVF       R0, 0
0x043C	0x3E27      	ADDLW      _number
0x043D	0x0084      	MOVWF      FSR
0x043E	0x0800      	MOVF       INDF, 0
0x043F	0x00C3      	MOVWF      FARG_display1_send_data1
0x0440	0x227C      	CALL       _display1
;dc.c,320 :: 		DD2 = (Count2)%10; // ExtRAct Hundreds Digit
0x0441	0x300A      	MOVLW      10
0x0442	0x00F4      	MOVWF      R4
0x0443	0x083D      	MOVF       _Count2, 0
0x0444	0x00F0      	MOVWF      R0
0x0445	0x213F      	CALL       _Div_8x8_U
0x0446	0x0878      	MOVF       R8, 0
0x0447	0x00F0      	MOVWF      R0
0x0448	0x0870      	MOVF       R0, 0
0x0449	0x00BB      	MOVWF      _DD2
;dc.c,321 :: 		display2(number[DD2]);
0x044A	0x0870      	MOVF       R0, 0
0x044B	0x3E27      	ADDLW      _number
0x044C	0x0084      	MOVWF      FSR
0x044D	0x0800      	MOVF       INDF, 0
0x044E	0x00C3      	MOVWF      FARG_display2_send_data2
0x044F	0x2150      	CALL       _display2
;dc.c,322 :: 		DD3 = (Count2/10)%10;  // ExtRAct Thousands Digit
0x0450	0x300A      	MOVLW      10
0x0451	0x00F4      	MOVWF      R4
0x0452	0x083D      	MOVF       _Count2, 0
0x0453	0x00F0      	MOVWF      R0
0x0454	0x213F      	CALL       _Div_8x8_U
0x0455	0x300A      	MOVLW      10
0x0456	0x00F4      	MOVWF      R4
0x0457	0x213F      	CALL       _Div_8x8_U
0x0458	0x0878      	MOVF       R8, 0
0x0459	0x00F0      	MOVWF      R0
0x045A	0x0870      	MOVF       R0, 0
0x045B	0x00BA      	MOVWF      _DD3
;dc.c,323 :: 		if( DD3>0)
0x045C	0x0870      	MOVF       R0, 0
0x045D	0x3C00      	SUBLW      0
0x045E	0x1803      	BTFSC      STATUS, 0
0x045F	0x2C67      	GOTO       L_main70
;dc.c,324 :: 		{display3(number[DD3]); }
0x0460	0x083A      	MOVF       _DD3, 0
0x0461	0x3E27      	ADDLW      _number
0x0462	0x0084      	MOVWF      FSR
0x0463	0x0800      	MOVF       INDF, 0
0x0464	0x00C3      	MOVWF      FARG_display3_send_data3
0x0465	0x2255      	CALL       _display3
0x0466	0x2C6A      	GOTO       L_main71
L_main70:
;dc.c,326 :: 		{display3(0xFF); }
0x0467	0x30FF      	MOVLW      255
0x0468	0x00C3      	MOVWF      FARG_display3_send_data3
0x0469	0x2255      	CALL       _display3
L_main71:
;dc.c,329 :: 		DD4= (count3);
0x046A	0x083C      	MOVF       _count3, 0
0x046B	0x00B9      	MOVWF      _DD4
;dc.c,330 :: 		display0(DD4);
0x046C	0x083C      	MOVF       _count3, 0
0x046D	0x00C3      	MOVWF      FARG_display0_num
0x046E	0x01C4      	CLRF       FARG_display0_num+1
0x046F	0x2186      	CALL       _display0
;dc.c,332 :: 		Delay_ms(500);
0x0470	0x3006      	MOVLW      6
0x0471	0x00FB      	MOVWF      R11
0x0472	0x3013      	MOVLW      19
0x0473	0x00FC      	MOVWF      R12
0x0474	0x30AD      	MOVLW      173
0x0475	0x00FD      	MOVWF      R13
L_main72:
0x0476	0x0BFD      	DECFSZ     R13, 1
0x0477	0x2C76      	GOTO       L_main72
0x0478	0x0BFC      	DECFSZ     R12, 1
0x0479	0x2C76      	GOTO       L_main72
0x047A	0x0BFB      	DECFSZ     R11, 1
0x047B	0x2C76      	GOTO       L_main72
0x047C	0x0000      	NOP
0x047D	0x0000      	NOP
;dc.c,339 :: 		}while(1);
0x047E	0x2B05      	GOTO       L_main42
;dc.c,340 :: 		}
0x047F	0x2C7F      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0005      [44]    _Div_16x16_S_L
0x0031      [16]    _I2C1_Is_Idle
0x0041      [41]    _I2C1_Start
0x006A      [22]    _I2C1_Wr
0x0080       [7]    _____DoICP
0x0087      [90]    _Div_16x16_S
0x00E1       [4]    _I2C1_Stop
0x00E5      [31]    _I2C1_Rd
0x0104       [7]    _I2C1_Repeated_Start
0x010B      [25]    _read_ds1307
0x0124      [27]    _abs
0x013F      [17]    _Div_8x8_U
0x0150      [38]    _display2
0x0176      [16]    _write_ds1307
0x0186      [87]    _display0
0x01DD      [82]    _Binary2BCD
0x022F      [38]    _display
0x0255      [39]    _display3
0x027C      [38]    _display1
0x02A2      [25]    _Mul_8x8_U
0x02BB      [12]    ___CC2DW
0x02C7      [10]    _I2C1_Init
0x02D1     [431]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0001       [1]    TMR0
0x0002       [1]    PCL
0x0003       [0]    RP1_bit
0x0003       [0]    RP0_bit
0x0003       [0]    C_bit
0x0003       [0]    DC_bit
0x0003       [0]    IRP_bit
0x0003       [1]    STATUS
0x0003       [0]    NOT_TO_bit
0x0003       [0]    NOT_PD_bit
0x0003       [0]    Z_bit
0x0004       [1]    FSRPTR
0x0004       [1]    FSR
0x0005       [0]    RA1_bit
0x0005       [1]    PORTA
0x0005       [0]    RA0_bit
0x0005       [0]    RA4_bit
0x0005       [0]    RA5_bit
0x0005       [0]    RA2_bit
0x0005       [0]    RA3_bit
0x0006       [0]    RB2_bit
0x0006       [0]    RB3_bit
0x0006       [0]    RB0_bit
0x0006       [0]    RB1_bit
0x0006       [0]    RB4_bit
0x0006       [0]    RB7_bit
0x0006       [1]    PORTB
0x0006       [0]    RB5_bit
0x0006       [0]    RB6_bit
0x0007       [0]    RC2_bit
0x0007       [0]    RC3_bit
0x0007       [0]    RC0_bit
0x0007       [0]    RC1_bit
0x0007       [0]    RC6_bit
0x0007       [0]    RC7_bit
0x0007       [0]    RC4_bit
0x0007       [0]    RC5_bit
0x0007       [1]    PORTC
0x0008       [0]    RD2_bit
0x0008       [0]    RD3_bit
0x0008       [0]    RD1_bit
0x0008       [0]    RD0_bit
0x0008       [1]    PORTD
0x0008       [0]    RD7_bit
0x0008       [0]    RD6_bit
0x0008       [0]    RD5_bit
0x0008       [0]    RD4_bit
0x0009       [0]    RE0_bit
0x0009       [0]    RE2_bit
0x0009       [0]    RE1_bit
0x0009       [1]    PORTE
0x000A       [1]    PCLATH
0x000B       [0]    RBIE_bit
0x000B       [0]    PEIE_bit
0x000B       [0]    T0IF_bit
0x000B       [0]    INTF_bit
0x000B       [0]    TMR0IE_bit
0x000B       [0]    TMR0IF_bit
0x000B       [0]    INTE_bit
0x000B       [0]    T0IE_bit
0x000B       [1]    INTCON
0x000B       [0]    GIE_bit
0x000B       [0]    RBIF_bit
0x000C       [0]    CCP1IF_bit
0x000C       [0]    SSPIF_bit
0x000C       [0]    TXIF_bit
0x000C       [0]    TMR1IF_bit
0x000C       [0]    TMR2IF_bit
0x000C       [0]    RCIF_bit
0x000C       [1]    PIR1
0x000C       [0]    PSPIF_bit
0x000C       [0]    ADIF_bit
0x000D       [0]    EEIF_bit
0x000D       [0]    BCLIF_bit
0x000D       [0]    CCP2IF_bit
0x000D       [0]    CMIF_bit
0x000D       [1]    PIR2
0x000E       [1]    TMR1L
0x000F       [1]    TMR1H
0x0010       [0]    T1SYNC_bit
0x0010       [0]    T1INSYNC_bit
0x0010       [0]    TMR1ON_bit
0x0010       [0]    TMR1CS_bit
0x0010       [0]    T1CKPS0_bit
0x0010       [0]    T1CKPS1_bit
0x0010       [0]    NOT_T1SYNC_bit
0x0010       [0]    T1OSCEN_bit
0x0010       [1]    T1CON
0x0011       [1]    TMR2
0x0012       [0]    TOUTPS1_bit
0x0012       [0]    TOUTPS0_bit
0x0012       [0]    TMR2ON_bit
0x0012       [1]    T2CON
0x0012       [0]    TOUTPS3_bit
0x0012       [0]    TOUTPS2_bit
0x0012       [0]    T2CKPS0_bit
0x0012       [0]    T2CKPS1_bit
0x0013       [1]    SSPBUF
0x0014       [0]    SSPM0_bit
0x0014       [1]    SSPCON
0x0014       [0]    CKP_bit
0x0014       [0]    SSPM3_bit
0x0014       [0]    SSPM1_bit
0x0014       [0]    SSPOV_bit
0x0014       [0]    SSPM2_bit
0x0014       [0]    SSPEN_bit
0x0014       [0]    WCOL_bit
0x0015       [1]    CCPR1L
0x0016       [1]    CCPR1H
0x0017       [0]    CCP1M0_bit
0x0017       [0]    CCP1M1_bit
0x0017       [0]    CCP1M2_bit
0x0017       [1]    CCP1CON
0x0017       [0]    CCP1M3_bit
0x0017       [0]    CCP1X_bit
0x0017       [0]    CCP1Y_bit
0x0018       [0]    RC8_9_bit
0x0018       [0]    FERR_bit
0x0018       [0]    NOT_RC8_bit
0x0018       [0]    ADDEN_bit
0x0018       [0]    OERR_bit
0x0018       [0]    SREN_bit
0x0018       [0]    CREN_bit
0x0018       [0]    RC9_bit
0x0018       [0]    RCD8_bit
0x0018       [1]    RCSTA
0x0018       [0]    RX9D_bit
0x0018       [0]    RX9_bit
0x0018       [0]    SPEN_bit
0x0019       [1]    TXREG
0x001A       [1]    RCREG
0x001B       [1]    CCPR2L
0x001C       [1]    CCPR2H
0x001D       [0]    CCP2M0_bit
0x001D       [0]    CCP2M3_bit
0x001D       [0]    CCP2M1_bit
0x001D       [0]    CCP2M2_bit
0x001D       [0]    CCP2Y_bit
0x001D       [1]    CCP2CON
0x001D       [0]    CCP2X_bit
0x001E       [1]    ADRESH
0x001F       [1]    ADCON0
0x001F       [0]    CHS0_bit
0x001F       [0]    CHS1_bit
0x001F       [0]    CHS2_bit
0x001F       [0]    GO_bit
0x001F       [0]    GO_DONE_bit
0x001F       [0]    ADON_bit
0x001F       [0]    NOT_DONE_bit
0x001F       [0]    ADCS1_bit
0x001F       [0]    ADCS0_bit
0x0020       [1]    _set_count
0x0021       [2]    _k
0x0023       [2]    _n
0x0025       [2]    _j
0x0027      [10]    _number
0x0031       [1]    _minute
0x0032       [1]    _minute1
0x0033       [1]    _second
0x0034       [1]    _Count1
0x0035       [1]    _second1
0x0036       [1]    _hour
0x0037       [1]    _set
0x0038       [1]    _hour1
0x0039       [1]    _DD4
0x003A       [1]    _DD3
0x003B       [1]    _DD2
0x003C       [1]    _count3
0x003D       [1]    _Count2
0x003E       [1]    _DD0
0x003F       [1]    _DD1
0x0040       [1]    _i
0x0041       [2]    ___DoICPAddr
0x0043       [2]    FARG_abs_a
0x0043       [2]    FARG_Binary2BCD_a
0x0043       [4]    FARG_I2C1_Init_clock
0x0043       [1]    FARG_display3_send_data3
0x0043       [2]    FARG_display0_num
0x0043       [1]    FARG_display2_send_data2
0x0043       [1]    FARG_display_send_data
0x0043       [1]    FARG_display1_send_data1
0x0043       [1]    FARG_write_ds1307_address
0x0043       [1]    FARG_read_ds1307_address
0x0044       [1]    FARG_write_ds1307_w_data
0x0044       [1]    read_ds1307_r_data_L0
0x0045       [2]    Binary2BCD_t1_L0
0x0047       [1]    FARG_I2C1_Wr_data_
0x0047       [2]    I2C1_Start_j_L0
0x0047       [1]    FARG_I2C1_Rd_ack
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0081       [0]    NOT_RBPU_bit
0x0081       [0]    PS2_bit
0x0081       [0]    PSA_bit
0x0081       [0]    PS1_bit
0x0081       [0]    PS0_bit
0x0081       [0]    T0CS_bit
0x0081       [0]    INTEDG_bit
0x0081       [1]    OPTION_REG
0x0081       [0]    T0SE_bit
0x0085       [0]    TRISA4_bit
0x0085       [0]    TRISA5_bit
0x0085       [1]    TRISA
0x0085       [0]    TRISA3_bit
0x0085       [0]    TRISA0_bit
0x0085       [0]    TRISA1_bit
0x0085       [0]    TRISA2_bit
0x0086       [0]    TRISB6_bit
0x0086       [0]    TRISB5_bit
0x0086       [1]    TRISB
0x0086       [0]    TRISB7_bit
0x0086       [0]    TRISB4_bit
0x0086       [0]    TRISB1_bit
0x0086       [0]    TRISB0_bit
0x0086       [0]    TRISB3_bit
0x0086       [0]    TRISB2_bit
0x0087       [0]    TRISC3_bit
0x0087       [0]    TRISC4_bit
0x0087       [0]    TRISC1_bit
0x0087       [0]    TRISC2_bit
0x0087       [0]    TRISC7_bit
0x0087       [1]    TRISC
0x0087       [0]    TRISC5_bit
0x0087       [0]    TRISC6_bit
0x0087       [0]    TRISC0_bit
0x0088       [0]    TRISD1_bit
0x0088       [0]    TRISD2_bit
0x0088       [1]    TRISD
0x0088       [0]    TRISD0_bit
0x0088       [0]    TRISD3_bit
0x0088       [0]    TRISD6_bit
0x0088       [0]    TRISD7_bit
0x0088       [0]    TRISD4_bit
0x0088       [0]    TRISD5_bit
0x0089       [1]    TRISE
0x0089       [0]    PSPMODE_TRISE_bit
0x0089       [0]    TRISE2_bit
0x0089       [0]    IBOV_TRISE_bit
0x0089       [0]    IBF_TRISE_bit
0x0089       [0]    OBF_TRISE_bit
0x0089       [0]    TRISE0_bit
0x0089       [0]    OBF_bit
0x0089       [0]    IBF_bit
0x0089       [0]    IBOV_bit
0x0089       [0]    TRISE1_bit
0x0089       [0]    PSPMODE_bit
0x008C       [1]    PIE1
0x008C       [0]    RCIE_bit
0x008C       [0]    TXIE_bit
0x008C       [0]    PSPIE_bit
0x008C       [0]    ADIE_bit
0x008C       [0]    SSPIE_bit
0x008C       [0]    TMR1IE_bit
0x008C       [0]    TMR2IE_bit
0x008C       [0]    CCP1IE_bit
0x008D       [1]    PIE2
0x008D       [0]    BCLIE_bit
0x008D       [0]    EEIE_bit
0x008D       [0]    CMIE_bit
0x008D       [0]    CCP2IE_bit
0x008E       [0]    NOT_BOR_bit
0x008E       [1]    PCON
0x008E       [0]    NOT_BO_bit
0x008E       [0]    NOT_POR_bit
0x0091       [1]    SSPCON2
0x0091       [0]    ACKEN_bit
0x0091       [0]    RCEN_bit
0x0091       [0]    ACKDT_bit
0x0091       [0]    GCEN_bit
0x0091       [0]    ACKSTAT_bit
0x0091       [0]    PEN_bit
0x0091       [0]    SEN_bit
0x0091       [0]    RSEN_bit
0x0092       [1]    PR2
0x0093       [1]    SSPADD
0x0094       [0]    UA_bit
0x0094       [0]    READ_WRITE_bit
0x0094       [1]    SSPSTAT
0x0094       [0]    BF_bit
0x0094       [0]    DATA_ADDRESS_bit
0x0094       [0]    D_A_bit
0x0094       [0]    P_bit
0x0094       [0]    S_bit
0x0094       [0]    I2C_STOP__bit
0x0094       [0]    NOT_ADDRESS_bit
0x0094       [0]    CKE_bit
0x0094       [0]    SMP_bit
0x0094       [0]    D_bit
0x0094       [0]    NOT_A_bit
0x0094       [0]    I2C_DATA_bit
0x0094       [0]    I2C_START__bit
0x0094       [0]    NOT_WRITE_bit
0x0094       [0]    NOT_W_bit
0x0094       [0]    R_W_bit
0x0094       [0]    R_bit
0x0094       [0]    I2C_READ_bit
0x0098       [0]    NOT_TX8_bit
0x0098       [0]    TX8_9_bit
0x0098       [0]    CSRC_bit
0x0098       [0]    TX9_bit
0x0098       [0]    TXD8_bit
0x0098       [0]    TXEN_bit
0x0098       [0]    SYNC_bit
0x0098       [0]    TX9D_bit
0x0098       [1]    TXSTA
0x0098       [0]    BRGH_bit
0x0098       [0]    TRMT_bit
0x0099       [1]    SPBRG
0x009C       [0]    CIS_bit
0x009C       [0]    C1INV_bit
0x009C       [0]    CM2_bit
0x009C       [0]    CM0_bit
0x009C       [0]    CM1_bit
0x009C       [0]    C2INV_bit
0x009C       [1]    CMCON
0x009C       [0]    C2OUT_bit
0x009C       [0]    C1OUT_bit
0x009D       [0]    CVR2_bit
0x009D       [0]    CVR3_bit
0x009D       [0]    CVR0_bit
0x009D       [0]    CVR1_bit
0x009D       [0]    CVRR_bit
0x009D       [1]    CVRCON
0x009D       [0]    CVREN_bit
0x009D       [0]    CVROE_bit
0x009E       [1]    ADRESL
0x009F       [0]    PCFG1_bit
0x009F       [0]    PCFG0_bit
0x009F       [1]    ADCON1
0x009F       [0]    PCFG2_bit
0x009F       [0]    ADFM_bit
0x009F       [0]    ADCS2_bit
0x009F       [0]    PCFG3_bit
0x010C       [1]    EEDATA
0x010D       [1]    EEADR
0x010E       [1]    EEDATH
0x010F       [1]    EEADRH
0x018C       [0]    EEPGD_bit
0x018C       [1]    EECON1
0x018C       [0]    WRERR_bit
0x018C       [0]    WR_bit
0x018C       [0]    WREN_bit
0x018C       [0]    RD_bit
0x018D       [1]    EECON2
//** Label List: ** 
//----------------------------------------------
  L_display0
  L_display1
  L_display2
  L_display3
  L_display4
  L_display5
  L_display6
  L_display7
  L_display18
  L_display19
  L_display110
  L_display111
  L_display112
  L_display113
  L_display114
  L_display115
  L_display216
  L_display217
  L_display218
  L_display219
  L_display220
  L_display221
  L_display222
  L_display223
  L_display324
  L_display325
  L_display326
  L_display327
  L_display328
  L_display329
  L_display330
  L_display331
  L_display032
  L_display033
  L_display034
  L_display035
  L_display036
  L_display037
  L_display038
  L_display039
  L_display040
  L_display041
  L_main42
  L_main43
  L_main44
  L_main45
  L_main46
  L_main47
  L_main48
  L_main49
  L_main50
  L_main51
  L_main52
  L_main53
  L_main54
  L_main55
  L_main56
  L_main57
  L_main58
  L_main59
  L_main60
  L_main61
  L_main62
  L_main63
  L_main64
  L_main65
  L_main66
  L_main67
  L_main68
  L_main69
  L_main70
  L_main71
  L_main72
  L__display073
  L__display074
  L__main75
  _display
  _display1
  _display2
  _display3
  _display0
  L__display076
  L__display077
  L__display078
  L__display079
  L__display080
  L__display081
  _read_ds1307
  _write_ds1307
  _Binary2BCD
  L__Binary2BCD82
  L__Binary2BCD83
  _main
  L_abs0
  L___Lib_CStdlib_strtod1
  L___Lib_CStdlib_strtod2
  L___Lib_CStdlib_strtod3
  L___Lib_CStdlib_strtod4
  L___Lib_CStdlib_strtod5
  L___Lib_CStdlib_strtod6
  L___Lib_CStdlib_strtod7
  L___Lib_CStdlib_strtod8
  L___Lib_CStdlib_strtod9
  L___Lib_CStdlib_strtod10
  L___Lib_CStdlib_strtod11
  L___Lib_CStdlib_strtod12
  L___Lib_CStdlib_strtod13
  L___Lib_CStdlib_strtod14
  L___Lib_CStdlib_strtod15
  L___Lib_CStdlib_strtod16
  L___Lib_CStdlib_strtod17
  L___Lib_CStdlib_strtod18
  L___Lib_CStdlib_strtod19
  L___Lib_CStdlib_strtod20
  L___Lib_CStdlib_strtod21
  L___Lib_CStdlib_strtod22
  L___Lib_CStdlib_strtod23
  L___Lib_CStdlib_strtod24
  L___Lib_CStdlib_strtod25
  L___Lib_CStdlib_strtod26
  L___Lib_CStdlib_strtod27
  L___Lib_CStdlib_strtod28
  L___Lib_CStdlib_strtod29
  L___Lib_CStdlib_strtod30
  L___Lib_CStdlib_strtod31
  L___Lib_CStdlib_strtod32
  L___Lib_CStdlib_strtod33
  L___Lib_CStdlib_strtod34
  L___Lib_CStdlib_strtod35
  L___Lib_CStdlib_strtod36
  L___Lib_CStdlib_strtod37
  L___Lib_CStdlib_strtod38
  L___Lib_CStdlib_strtod39
  L___Lib_CStdlib_strtod40
  L___Lib_CStdlib_strtod41
  L___Lib_CStdlib_strtod42
  L___Lib_CStdlib_strtod43
  L___Lib_CStdlib_strtod44
  L___Lib_CStdlib_strtod45
  L___Lib_CStdlib_strtod46
  L___Lib_CStdlib_strtod47
  L___Lib_CStdlib_strtod48
  L___Lib_CStdlib_strtod49
  L___Lib_CStdlib_strtod50
  L___Lib_CStdlib_strtod51
  L___Lib_CStdlib_strtod52
  ___atoi_skipws_atoi
  L_atoi53
  L_atoi54
  L_atoi55
  L_atoi56
  L_atoi57
  L_atoi58
  ___atoi_conv_atoi
  L_atoi59
  L_atoi60
  ___atol_skipws_atol
  L_atol61
  L_atol62
  L_atol63
  L_atol64
  L_atol65
  L_atol66
  ___atol_conv_atol
  L_atol67
  L_atol68
  L_div69
  L_ldiv70
  L_uldiv71
  L_labs72
  L_max73
  L_min74
  L_rand75
  L_xtoi76
  L_xtoi77
  L_xtoi78
  L_xtoi79
  L_xtoi80
  L_xtoi81
  L_xtoi82
  L_xtoi83
  L_xtoi84
  L_xtoi85
  L_xtoi86
  L___Lib_CStdlib_strtod87
  L___Lib_CStdlib_strtod88
  L___Lib_CStdlib_strtod89
  L__atoi90
  L__atol91
  _abs
  L__abs92
  __Lib_CStdlib_strtod
  L___Lib_CStdlib_strtod93
  L___Lib_CStdlib_strtod94
  _atof
  _atoi
  L__atoi95
  L__atoi96
  L__atoi97
  L__atoi98
  _atol
  L__atol99
  L__atol100
  _div
  _ldiv
  _uldiv
  _labs
  L__labs101
  _max
  L__max102
  _min
  L__min103
  _srand
  _rand
  _xtoi
  L_I2C1_Is_Idle0
  L_I2C1_Is_Idle1
  L_I2C1_Start2
  L_I2C1_Start3
  L_I2C1_Start4
  L_I2C1_Start5
  L_I2C1_Start6
  L_I2C1_Start7
  L_I2C1_Start8
  L_I2C1_Start9
  L_I2C1_Repeated_Start10
  L_I2C1_Repeated_Start11
  L_I2C1_Rd12
  L_I2C1_Rd13
  L_I2C1_Rd14
  L_I2C1_Rd15
  L_I2C1_Rd16
  L_I2C1_Rd17
  L_I2C1_Wr18
  L_I2C1_Wr19
  L_I2C1_Wr20
  L_I2C1_Wr21
  L_I2C1_Wr22
  L_I2C1_Wr23
  _I2C1_Init
  _I2C1_Is_Idle
  _I2C1_Start
  L__I2C1_Start24
  L__I2C1_Start25
  _I2C1_Repeated_Start
  _I2C1_Rd
  _I2C1_Wr
  _I2C1_Stop
  LOOPS3232A
  SADD22LA
  SOK22LA
  SADD22L8
  SOK22L8
  LOOPS3232B
  SADD22LB
  SOK22LB
  SADD22L16
  SOK22L16
  LOOPS3232C
  SADD22LC
  SOK22LC
  SADD22L24
  SOK22L24
  LOOPS3232D
  SADD22LD
  SOK22LD
  SOK22L
  FXD3232S
  END_ALL
  CA3232S
  C3232SX
  C3232SX1
  C3232S
  C3232S2
  C3232SX4
  C3232SOK
  C3232SX3
  C3232SX2
  avoid_comfrem
  LOOPU3232A
  UADD22LA
  UOK22LA
  UADD22L8
  UOK22L8
  LOOPU3232B
  UADD22LB
  UOK22LB
  UADD22L16
  UOK22L16
  LOOPU3232C
  UADD22LC
  UOK22LC
  UADD22L24
  UOK22L24
  LOOPU3232D
  UADD22LD
  UOK22LD
  UOK22L
  _NEXT
  _EXIT2
  _LOOP
  _EXIT1
  _IF_FIRST
  _IF_SECOND
  _INVERCE_FIRST
  _MULT
  _INBERSE_SECOND
  _EXIT
  _Mul_8x8_U
  _Mul_16x16_U
  _Div_8x8_U
  _Div_16x16_U
  _Mul_8x8_S
  _Mul_16x16_S
  _Div_16x16_S_L
  _Div_16x16_S
  _Div_8x8_S
  _SDIV3232L
  _COMFREM
  _Div_32x32_S
  _Div_32x32_U
  _Mul_32x32_U
  _Mul_32x32_S
  _CC2D_Loop1
  _____DoICP
  _____DoIFC
  ___CC2DW
